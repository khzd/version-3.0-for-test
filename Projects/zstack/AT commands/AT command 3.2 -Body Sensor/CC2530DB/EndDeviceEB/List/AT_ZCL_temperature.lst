###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         26/Aug/2015  19:20:31 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  S:\zigbee\Myzigbe\version 3.0 for                  #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\Source\AT_ZCL_temperature.c           #
#    Command line       =  -f "S:\zigbee\Myzigbe\version 3.0 for              #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wE #
#                          ndev.cfg" (-DCPU32MHZ -DROOT=__near_func           #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f "S:\zigbee\Myzigbe\version  #
#                          3.0 for test\Projects\zstack\AT commands\AT        #
#                          command 3.2 -Body Sensor\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wConfig.cfg" (-DZIGBEEPRO -DSECURE=0     #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "S:\zigbee\Myzigbe\version  #
#                          3.0 for test\Projects\zstack\AT commands\AT        #
#                          command 3.2 -Body Sensor\Source\AT_ZCL_temperature #
#                          .c" -D ZIGBEEPRO -D NWK_AUTO_POLL -D               #
#                          HAL_UART=TRUE -D HOLD_AUTO_START -D NV_RESTORE -D  #
#                          REFLECTOR -D HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D   #
#                          xHAL_UART_ISR_TX_MAX=200 -D xPOWER_SAVING -D       #
#                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D           #
#                          ZCL_ON_OFF -D ZCL_DISCOVER -D xZTOOL_P1 -D         #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          xLCD_SUPPORTED=DEBUG -D xMT_UART_DEFAULT_OVERFLOW= #
#                          FALSE -lC "S:\zigbee\Myzigbe\version 3.0 for       #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\EndDeviceEB\List\" -lA       #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\EndDeviceEB\List\"           #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\EndDeviceEB\Obj\" -e         #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "S:\zigbee\Myzigbe\version 3.0 for              #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\Source\" -I               #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\Source\hal\" -I           #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\Source\Modified\" -I      #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\ZMain\TI2530DB\"    #
#                          -I "S:\zigbee\Myzigbe\version 3.0 for              #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\" -I "S:\zigbee\Myzigbe\version 3.0 for  #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\target\CC2530EB\" -I "S:\zigbee\Myzigbe\version  #
#                          3.0 for test\Projects\zstack\AT commands\AT        #
#                          command 3.2 -Body Sensor\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\include\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\high_level\" -I "S:\zigbee\Myzigbe\version 3.0   #
#                          for test\Projects\zstack\AT commands\AT command    #
#                          3.2 -Body Sensor\CC2530DB\..\..\..\..\..\Component #
#                          s\mac\low_level\srf04\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\single_chip\" -I                 #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\mt #
#                          \" -I "S:\zigbee\Myzigbe\version 3.0 for           #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\os #
#                          al\include\" -I "S:\zigbee\Myzigbe\version 3.0     #
#                          for test\Projects\zstack\AT commands\AT command    #
#                          3.2 -Body Sensor\CC2530DB\..\..\..\..\..\Component #
#                          s\services\saddr\" -I "S:\zigbee\Myzigbe\version   #
#                          3.0 for test\Projects\zstack\AT commands\AT        #
#                          command 3.2 -Body Sensor\CC2530DB\..\..\..\..\..\C #
#                          omponents\services\sdata\" -I                      #
#                          "S:\zigbee\Myzigbe\version 3.0 for                 #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\" -I "S:\zigbee\Myzigbe\version 3.0 for     #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\nwk\" -I "S:\zigbee\Myzigbe\version 3.0 for    #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sapi\" -I "S:\zigbee\Myzigbe\version 3.0 for   #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\" -I "S:\zigbee\Myzigbe\version 3.0 for    #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sys\" -I "S:\zigbee\Myzigbe\version 3.0 for    #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\zdo\" -I "S:\zigbee\Myzigbe\version 3.0 for    #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\zcl\" -I "S:\zigbee\Myzigbe\version 3.0 for    #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\" -I "S:\zigbee\Myzigbe\version 3.0 for         #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\f8w\" -Ohz --require_prototypes                 #
#    List file          =  S:\zigbee\Myzigbe\version 3.0 for                  #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\EndDeviceEB\List\AT_ZCL_temp #
#                          erature.lst                                        #
#    Object file        =  S:\zigbee\Myzigbe\version 3.0 for                  #
#                          test\Projects\zstack\AT commands\AT command 3.2    #
#                          -Body Sensor\CC2530DB\EndDeviceEB\Obj\AT_ZCL_tempe #
#                          rature.r51                                         #
#                                                                             #
#                                                                             #
###############################################################################

S:\zigbee\Myzigbe\version 3.0 for test\Projects\zstack\AT commands\AT command 3.2 -Body Sensor\Source\AT_ZCL_temperature.c
      1          
      2          /*********************************************************************
      3           * INCLUDES
      4           */
      5          #include "ZComDef.h"
      6          #include "OSAL.h"
      7          #include "AF.h"
      8          #include "ZDApp.h"
      9          
     10          #include "zcl.h"
     11          #include "zcl_general.h"
     12          #include "zcl_ms.h"
     13          #include "zcl_ha.h"
     14          #include "AT_ZCL.h"
     15          #include "AT_uart.h"
     16          #include "AT_ZCL_temperature.h"
     17          #include "AT_ds18b20.h" 
     18          
     19          #include "onboard.h"
     20          
     21          /* HAL */
     22          #include "hal_led.h"
     23          #include "hal_key.h"
     24          
     25          /*********************************************************************
     26           * GLOBAL VARIABLES
     27           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     28          byte AT_ZCL_TEMP_TaskID;
   \                     AT_ZCL_TEMP_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     29          
     30          /*********************************************************************
     31           * LOCAL FUNCTION
     32           */
     33          static void AT_ZCL_TEMP_IdentifyCB( zclIdentify_t *pCmd );
     34          static void AT_ZCL_TEMP_BasicResetCB( void );
     35          static void AT_ZCL_TEMP_ProcessIdentifyTimeChange( void );
     36          
     37          
     38          static void AT_ZCL_TEMP_OnOffCB( uint8 cmd );
     39          static void AT_ZCL_TEMP_update(void);
     40          static void AT_ZCL_TEMP_MS_PlaceHolder( void );
     41          static void AT_ZCL_TEMP_EP_ENABLE( bool isEnable);
     42          
     43          /*********************************************************************
     44           * ZCL General Profile Callback table
     45           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
     46          static zclGeneral_AppCallbacks_t AT_ZCL_TEMP_GEN_CmdCallbacks =
   \                     AT_ZCL_TEMP_GEN_CmdCallbacks:
   \   000000                DS 30
   \   00001E                REQUIRE `?<Initializer for AT_ZCL_TEMP_GEN_CmdCallbacks`
   \   00001E                REQUIRE __INIT_XDATA_I
     47          { 
     48            AT_ZCL_TEMP_BasicResetCB,                 // Basic Cluster Reset command
     49            AT_ZCL_TEMP_IdentifyCB,                   // Identify command   
     50            NULL,                                    // Identify Query Response command
     51            AT_ZCL_TEMP_OnOffCB,                      // On/Off cluster command
     52            NULL,                                     // Level Control Move to Level command
     53            NULL,                                     // Level Control Move command
     54            NULL,                                     // Level Control Step command
     55            NULL,                                     // Group Response commands
     56            NULL,                                     // Scene Store Request command
     57            NULL,                                     // Scene Recall Request command
     58            NULL,                                     // Scene Response command
     59            NULL,                                     // Alarm (Response) command
     60            NULL,                                     // RSSI Location commands
     61            NULL,                                     // RSSI Location Response commands
     62          };
     63          /*********************************************************************
     64           * ZCL Measurement and Sensing Profile Callback table
     65           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
     66          static zclMS_AppCallbacks_t AT_ZCL_TEMP_MS_CmdCallbacks=
   \                     AT_ZCL_TEMP_MS_CmdCallbacks:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for AT_ZCL_TEMP_MS_CmdCallbacks>`
   \   000002                REQUIRE __INIT_XDATA_I
     67          {
     68            AT_ZCL_TEMP_MS_PlaceHolder,                                     //// Place Holder
     69          };
     70          
     71          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     72          void AT_ZCL_TEMP_Init( byte task_id )
   \                     AT_ZCL_TEMP_Init:
     73          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     74            AT_ZCL_TEMP_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#AT_ZCL_TEMP_TaskID
   \   000009   F0           MOVX    @DPTR,A
     75          
     76            // This app is part of the Home Automation Profile
     77            zclHA_Init( &AT_ZCL_TEMP_SimpleDesc );
   \   00000A                ; Setup parameters for call to function zclHA_Init
   \   00000A   7A..         MOV     R2,#AT_ZCL_TEMP_SimpleDesc & 0xff
   \   00000C   7B..         MOV     R3,#(AT_ZCL_TEMP_SimpleDesc >> 8) & 0xff
   \   00000E   12....       LCALL   ??zclHA_Init?relay
     78          
     79            // Register the ZCL General Cluster Library callback functions
     80            zclGeneral_RegisterCmdCallbacks( AT_ZCL_TEMP_ENDPOINT, &AT_ZCL_TEMP_GEN_CmdCallbacks );
   \   000011                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000011   7A..         MOV     R2,#AT_ZCL_TEMP_GEN_CmdCallbacks & 0xff
   \   000013   7B..         MOV     R3,#(AT_ZCL_TEMP_GEN_CmdCallbacks >> 8) & 0xff
   \   000015   7904         MOV     R1,#0x4
   \   000017   12....       LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
     81            
     82            // Register the ZCL Measurement and Sensing Cluster Library callback functions
     83            zclMS_RegisterCmdCallbacks( AT_ZCL_TEMP_ENDPOINT, &AT_ZCL_TEMP_MS_CmdCallbacks );
   \   00001A                ; Setup parameters for call to function zclMS_RegisterCmdCallbacks
   \   00001A   7A..         MOV     R2,#AT_ZCL_TEMP_MS_CmdCallbacks & 0xff
   \   00001C   7B..         MOV     R3,#(AT_ZCL_TEMP_MS_CmdCallbacks >> 8) & 0xff
   \   00001E   7904         MOV     R1,#0x4
   \   000020   12....       LCALL   ??zclMS_RegisterCmdCallbacks?relay
     84          
     85            //register for AT command system enable/disable call back function
     86            AT_ZCL_EP_ENABLE_Register(  AT_ZCL_TEMP_ENDPOINT,AT_ZCL_TEMP_EP_ENABLE);
   \   000023                ; Setup parameters for call to function AT_ZCL_EP_ENABLE_Register
   \   000023   7A..         MOV     R2,#??AT_ZCL_TEMP_EP_ENABLE?relay & 0xff
   \   000025   7B..         MOV     R3,#(??AT_ZCL_TEMP_EP_ENABLE?relay >> 8) & 0xff
   \   000027   7904         MOV     R1,#0x4
   \   000029   12....       LCALL   ??AT_ZCL_EP_ENABLE_Register?relay
     87            
     88            // Register the application's attribute list
     89            zcl_registerAttrList( AT_ZCL_TEMP_ENDPOINT, AT_ZCL_TEMP_MAX_ATTRIBUTES, AT_ZCL_TEMP_Attrs );
   \   00002C                ; Setup parameters for call to function zcl_registerAttrList
   \   00002C   7C..         MOV     R4,#AT_ZCL_TEMP_Attrs & 0xff
   \   00002E   7D..         MOV     R5,#(AT_ZCL_TEMP_Attrs >> 8) & 0xff
   \   000030   7A0C         MOV     R2,#0xc
   \   000032   7904         MOV     R1,#0x4
   \   000034   12....       LCALL   ??zcl_registerAttrList?relay
     90          
     91          
     92            
     93          }
   \   000037   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     94          
     95          
     96          
     97          /*********************************************************************
     98           * @fn          zclSample_event_loop
     99           *
    100           * @brief       Event Loop Processor for zclGeneral.
    101           *
    102           * @param       none
    103           *
    104           * @return      none
    105           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    106          uint16 AT_ZCL_TEMP_event_loop( uint8 task_id, uint16 events )
   \                     AT_ZCL_TEMP_event_loop:
    107          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    108            afIncomingMSGPacket_t *MSGpkt;
    109            
    110            (void)task_id;  // Intentionally unreferenced parameter
    111          
    112            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   702B         JNZ     ??AT_ZCL_TEMP_event_loop_0
    113            {
    114              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( AT_ZCL_TEMP_TaskID )) )
    115              {
    116                switch ( MSGpkt->hdr.event )
    117                { 
    118                   default:
    119                    break;
    120                }
    121                // Release the memory
    122                osal_msg_deallocate( (uint8 *)MSGpkt );
    123              }
    124          
    125              // return unprocessed events
    126              return (events ^ SYS_EVENT_MSG);
    127            }
    128          
    129            if ( events & AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   5039         JNC     ??AT_ZCL_TEMP_event_loop_1
    130            {
    131              if (AT_ZCL_TEMP_IdentifyTime > 0 )
   \   000012   90....       MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F8           MOV     R0,A
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   F9           MOV     R1,A
   \   00001A   E8           MOV     A,R0
   \   00001B   49           ORL     A,R1
   \   00001C   600C         JZ      ??AT_ZCL_TEMP_event_loop_2
    132                AT_ZCL_TEMP_IdentifyTime--;
   \   00001E   90....       MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
   \   000021   E0           MOVX    A,@DPTR
   \   000022   24FF         ADD     A,#-0x1
   \   000024   F0           MOVX    @DPTR,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   34FF         ADDC    A,#-0x1
   \   000029   F0           MOVX    @DPTR,A
    133              AT_ZCL_TEMP_ProcessIdentifyTimeChange();
   \                     ??AT_ZCL_TEMP_event_loop_2:
   \   00002A                ; Setup parameters for call to function AT_ZCL_TEMP_ProcessIdentifyTimeChange
   \   00002A   12....       LCALL   ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay
    134          
    135              return ( events ^ AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT );
   \   00002D   EE           MOV     A,R6
   \   00002E   6401         XRL     A,#0x1
   \   000030   FA           MOV     R2,A
   \   000031   EF           MOV     A,R7
   \                     ??AT_ZCL_TEMP_event_loop_3:
   \   000032   FB           MOV     R3,A
   \   000033   805F         SJMP    ??AT_ZCL_TEMP_event_loop_4
    136            }
   \                     ??AT_ZCL_TEMP_event_loop_5:
   \   000035                ; Setup parameters for call to function osal_msg_deallocate
   \   000035   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??AT_ZCL_TEMP_event_loop_0:
   \   000038                ; Setup parameters for call to function osal_msg_receive
   \   000038   90....       MOV     DPTR,#AT_ZCL_TEMP_TaskID
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   F9           MOV     R1,A
   \   00003D   12....       LCALL   ??osal_msg_receive?relay
   \   000040   EA           MOV     A,R2
   \   000041   4B           ORL     A,R3
   \   000042   70F1         JNZ     ??AT_ZCL_TEMP_event_loop_5
   \   000044   EE           MOV     A,R6
   \   000045   FA           MOV     R2,A
   \   000046   EF           MOV     A,R7
   \   000047   6480         XRL     A,#0x80
   \   000049   80E7         SJMP    ??AT_ZCL_TEMP_event_loop_3
    137            //measure the temperature
    138            if ( events & AT_ZCL_TEMP_TEMP_MEASURE_EVT )
   \                     ??AT_ZCL_TEMP_event_loop_1:
   \   00004B   5402         ANL     A,#0x2
   \   00004D   6041         JZ      ??AT_ZCL_TEMP_event_loop_6
    139            {
    140              AT_ZCL_TEMP_update();
   \   00004F                ; Setup parameters for call to function ReadDs18B20
   \   00004F   12....       LCALL   ??ReadDs18B20?relay
   \   000052   8A..         MOV     ?V0 + 0,R2
   \   000054   8B..         MOV     ?V0 + 1,R3
   \   000056   EB           MOV     A,R3
   \   000057   33           RLC     A
   \   000058   95E0         SUBB    A,0xE0 /* A   */
   \   00005A   F5..         MOV     ?V0 + 2,A
   \   00005C   F5..         MOV     ?V0 + 3,A
   \   00005E   78..         MOV     R0,#?V0 + 0
   \   000060   12....       LCALL   ?L_TO_FLT
   \   000063   90....       MOV     DPTR,#__Constant_40c80000
   \   000066   78..         MOV     R0,#?V0 + 4
   \   000068   12....       LCALL   ?L_MOV_X
   \   00006B   78..         MOV     R0,#?V0 + 0
   \   00006D   79..         MOV     R1,#?V0 + 4
   \   00006F   12....       LCALL   ?FLT_MUL
   \   000072   78..         MOV     R0,#?V0 + 0
   \   000074   12....       LCALL   ?FLT_TO_L
   \   000077   90....       MOV     DPTR,#AT_ZCL_TEMP_current
   \   00007A   E5..         MOV     A,?V0 + 0
   \   00007C   F0           MOVX    @DPTR,A
   \   00007D   A3           INC     DPTR
   \   00007E   E5..         MOV     A,?V0 + 1
   \   000080   F0           MOVX    @DPTR,A
    141              osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT, 1000 );
   \   000081                ; Setup parameters for call to function osal_start_timerEx
   \   000081   7CE8         MOV     R4,#-0x18
   \   000083   7D03         MOV     R5,#0x3
   \   000085   12....       LCALL   ?Subroutine2 & 0xFFFF
    142              return ( events ^ AT_ZCL_TEMP_TEMP_MEASURE_EVT );
   \                     ??CrossCallReturnLabel_0:
   \   000088   EE           MOV     A,R6
   \   000089   6402         XRL     A,#0x2
   \   00008B   FA           MOV     R2,A
   \   00008C   EF           MOV     A,R7
   \   00008D   FB           MOV     R3,A
   \   00008E   8004         SJMP    ??AT_ZCL_TEMP_event_loop_4
    143            }
    144          
    145            // Discard unknown events
    146            return 0;
   \                     ??AT_ZCL_TEMP_event_loop_6:
   \   000090   7A00         MOV     R2,#0x0
   \   000092   7B00         MOV     R3,#0x0
   \                     ??AT_ZCL_TEMP_event_loop_4:
   \   000094   7F08         MOV     R7,#0x8
   \   000096   02....       LJMP    ?BANKED_LEAVE_XDATA
    147          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7A02         MOV     R2,#0x2
   \   000002                REQUIRE ??Subroutine3_0
   \   000002                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#AT_ZCL_TEMP_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET
    148          
    149          
    150          
    151          
    152          /*********************************************************************
    153           * @fn      AT_ZCL_TEMP_BasicResetCB
    154           *
    155           * @brief   Callback from the ZCL General Cluster Library
    156           *          to set all the Basic Cluster attributes to default values.
    157           *
    158           * @param   none
    159           *
    160           * @return  none
    161           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    162          static void AT_ZCL_TEMP_BasicResetCB( void )
   \                     AT_ZCL_TEMP_BasicResetCB:
    163          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 4
   \   000004   74FC         MOV     A,#-0x4
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
    164            // Reset all attributes to default values
    165            AT_ZCL_TEMP_OnOffCB(COMMAND_OFF);
   \   000009                ; Setup parameters for call to function AT_ZCL_TEMP_OnOffCB
   \   000009   7900         MOV     R1,#0x0
   \   00000B   12....       LCALL   ??AT_ZCL_TEMP_OnOffCB?relay
    166            
    167            zclIdentify_t identifyCmd={NULL,0};
   \   00000E   85..82       MOV     DPL,?XSP + 0
   \   000011   85..83       MOV     DPH,?XSP + 1
   \   000014   AC82         MOV     R4,DPL
   \   000016   AD83         MOV     R5,DPH
   \   000018   7583..       MOV     DPH,#(`?<Constant {(afAddrType_t *)0, 0}>` >> 8) & 0xff
   \   00001B   7582..       MOV     DPL,#`?<Constant {(afAddrType_t *)0, 0}>` & 0xff
   \   00001E   7404         MOV     A,#0x4
   \   000020   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    168            AT_ZCL_TEMP_IdentifyCB( &identifyCmd );
   \   000023                ; Setup parameters for call to function AT_ZCL_TEMP_IdentifyCB
   \   000023   85..82       MOV     DPL,?XSP + 0
   \   000026   85..83       MOV     DPH,?XSP + 1
   \   000029   AA82         MOV     R2,DPL
   \   00002B   AB83         MOV     R3,DPH
   \   00002D   12....       LCALL   ??AT_ZCL_TEMP_IdentifyCB?relay
    169          }
   \   000030   7404         MOV     A,#0x4
   \   000032   12....       LCALL   ?DEALLOC_XSTACK8
   \   000035                REQUIRE ?Subroutine1
   \   000035                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    170          
    171          
    172          /*********************************************************************
    173           * @fn      AT_ZCL_TEMP_IdentifyCB
    174           *
    175           * @brief   Callback from the ZCL General Cluster Library when
    176           *          it received an Identity Command for this application.
    177           *
    178           * @param   srcAddr - source address and endpoint of the response message
    179           * @param   identifyTime - the number of seconds to identify yourself
    180           *
    181           * @return  none
    182           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    183          static void AT_ZCL_TEMP_IdentifyCB( zclIdentify_t *pCmd )
   \                     AT_ZCL_TEMP_IdentifyCB:
    184          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    185            AT_ZCL_TEMP_IdentifyTime = pCmd->identifyTime;
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   90....       MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
   \   000012   E8           MOV     A,R0
   \   000013   F0           MOVX    @DPTR,A
   \   000014   A3           INC     DPTR
   \   000015   E9           MOV     A,R1
   \   000016   F0           MOVX    @DPTR,A
    186            AT_ZCL_TEMP_ProcessIdentifyTimeChange();
   \   000017                ; Setup parameters for call to function AT_ZCL_TEMP_ProcessIdentifyTimeChange
   \   000017   12....       LCALL   ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay
    187          }
   \   00001A   80..         SJMP    ?Subroutine1
    188          
    189          
    190          
    191          /*********************************************************************
    192           * @fn      AT_ZCL_TEMP_ProcessIdentifyTimeChange
    193           *
    194           * @brief   Called to process any change to the IdentifyTime attribute.
    195           *
    196           * @param   none
    197           *
    198           * @return  none
    199           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    200          static void AT_ZCL_TEMP_ProcessIdentifyTimeChange( void )
   \                     AT_ZCL_TEMP_ProcessIdentifyTimeChange:
    201          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    202            if ( AT_ZCL_TEMP_IdentifyTime > 0 )
   \   000004   90....       MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F8           MOV     R0,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F9           MOV     R1,A
   \   00000C   E8           MOV     A,R0
   \   00000D   49           ORL     A,R1
   \   00000E   6018         JZ      ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_0
    203            {
    204              osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT, 1000 );
   \   000010                ; Setup parameters for call to function osal_start_timerEx
   \   000010   7CE8         MOV     R4,#-0x18
   \   000012   7D03         MOV     R5,#0x3
   \   000014   7A01         MOV     R2,#0x1
   \   000016   12....       LCALL   ??Subroutine3_0 & 0xFFFF
    205              HalLedBlink ( HAL_LED_1, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
   \                     ??CrossCallReturnLabel_2:
   \   000019                ; Setup parameters for call to function HalLedBlink
   \   000019   7CE8         MOV     R4,#-0x18
   \   00001B   7D03         MOV     R5,#0x3
   \   00001D   7B05         MOV     R3,#0x5
   \   00001F   7AFF         MOV     R2,#-0x1
   \   000021   7901         MOV     R1,#0x1
   \   000023   12....       LCALL   ??HalLedBlink?relay
   \   000026   8012         SJMP    ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_1
    206            }
    207            else
    208            {
    209              if ( AT_ZCL_TEMP_OnOff ){}
   \                     ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_0:
   \   000028   90....       MOV     DPTR,#AT_ZCL_TEMP_OnOff
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   700C         JNZ     ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_1
    210              else
    211              osal_stop_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT );
   \   00002E                ; Setup parameters for call to function osal_stop_timerEx
   \   00002E   7A01         MOV     R2,#0x1
   \   000030   7B00         MOV     R3,#0x0
   \   000032   90....       MOV     DPTR,#AT_ZCL_TEMP_TaskID
   \   000035   E0           MOVX    A,@DPTR
   \   000036   F9           MOV     R1,A
   \   000037   12....       LCALL   ??osal_stop_timerEx?relay
    212            }
    213          }
   \                     ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_1:
   \   00003A   80..         SJMP    ?Subroutine1
    214          
    215          
    216          /*********************************************************************
    217           * @fn      void AT_ZCL_TEMP_update
    218           *
    219           * @brief   updata the Device Temperature Configuration Cluster every second
    220           *
    221           * @param   none
    222           *
    223           * @return  none
    224           *
    225          ************************************************************/
    226          static void AT_ZCL_TEMP_update(void){
    227            uint16 temp = ReadDs18B20();
    228            AT_ZCL_TEMP_current =(int16)((*(int16*) & temp)*6.25);
    229            
    230          }
    231          
    232          
    233          /*********************************************************************
    234           * @fn      AT_ZCL_TEMP_OnOffCB
    235           *
    236           * @brief   Callback from the ZCL General Cluster Library when
    237           *          it received an On/Off Command for this application.
    238           *
    239           * @param   cmd - COMMAND_ON, COMMAND_OFF or COMMAND_TOGGLE
    240           *
    241           * @return  none
    242           */
    243          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    244          static void AT_ZCL_TEMP_OnOffCB( uint8 cmd )
   \                     AT_ZCL_TEMP_OnOffCB:
    245          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    246            // Turn on the light
    247            if ( cmd == COMMAND_ON )
   \   000007   7401         MOV     A,#0x1
   \   000009   6E           XRL     A,R6
   \   00000A   700F         JNZ     ??AT_ZCL_TEMP_OnOffCB_0
    248              AT_ZCL_TEMP_OnOff = TEMP_ON;
   \                     ??AT_ZCL_TEMP_OnOffCB_1:
   \   00000C   90....       MOV     DPTR,#AT_ZCL_TEMP_OnOff
   \   00000F   7401         MOV     A,#0x1
   \   000011   F0           MOVX    @DPTR,A
    249          
    250            // Turn off the light
    251            else if ( cmd == COMMAND_OFF )
    252              AT_ZCL_TEMP_OnOff = TEMP_OFF;
    253          
    254            // Toggle the light
    255            else
    256            {
    257              if ( AT_ZCL_TEMP_OnOff == TEMP_OFF )
    258                AT_ZCL_TEMP_OnOff = TEMP_ON;
    259              else
    260                AT_ZCL_TEMP_OnOff = TEMP_OFF;
    261            }
    262          
    263            // In this sample app, we use LED3 to simulate the Light
    264            if (AT_ZCL_TEMP_OnOff == TEMP_ON ){
    265              osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT, 10 );
   \   000012                ; Setup parameters for call to function osal_start_timerEx
   \   000012   7C0A         MOV     R4,#0xa
   \   000014   7D00         MOV     R5,#0x0
   \   000016   12....       LCALL   ?Subroutine2 & 0xFFFF
    266            }else{
    267              osal_stop_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT );
    268              AT_ZCL_TEMP_current=0x8000;   //0x8000 indicates that the temperature measurement is invalid.
    269            }
    270          }
   \                     ??CrossCallReturnLabel_1:
   \   000019   80..         SJMP    ?Subroutine0
   \                     ??AT_ZCL_TEMP_OnOffCB_0:
   \   00001B   EE           MOV     A,R6
   \   00001C   701B         JNZ     ??AT_ZCL_TEMP_OnOffCB_2
   \                     ??AT_ZCL_TEMP_OnOffCB_3:
   \   00001E   90....       MOV     DPTR,#AT_ZCL_TEMP_OnOff
   \   000021   E4           CLR     A
   \   000022   F0           MOVX    @DPTR,A
   \   000023                ; Setup parameters for call to function osal_stop_timerEx
   \   000023   7A02         MOV     R2,#0x2
   \   000025   FB           MOV     R3,A
   \   000026   90....       MOV     DPTR,#AT_ZCL_TEMP_TaskID
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??osal_stop_timerEx?relay
   \   00002E   90....       MOV     DPTR,#AT_ZCL_TEMP_current
   \   000031   E4           CLR     A
   \   000032   F0           MOVX    @DPTR,A
   \   000033   A3           INC     DPTR
   \   000034   7480         MOV     A,#-0x80
   \   000036   F0           MOVX    @DPTR,A
   \   000037   80E0         SJMP    ??CrossCallReturnLabel_1
   \                     ??AT_ZCL_TEMP_OnOffCB_2:
   \   000039   90....       MOV     DPTR,#AT_ZCL_TEMP_OnOff
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   70DF         JNZ     ??AT_ZCL_TEMP_OnOffCB_3
   \   00003F   80CB         SJMP    ??AT_ZCL_TEMP_OnOffCB_1
    271          
    272          /******************************************************
    273           * @fn      AT_ZCL_TEMP_MS_PlaceHolder
    274           *
    275           * @brief   Process  Measurement and Sensing profile call Callback function
    276          ********************************************************/
    277          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    278          static void AT_ZCL_TEMP_MS_PlaceHolder( void){
   \                     AT_ZCL_TEMP_MS_PlaceHolder:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    279          }
   \   000000   02....       LJMP    ?BRET
    280          
    281          
    282          /******************************************************
    283           * @fn      AT_ZCL_TEMP_EP_ENABLE
    284           *
    285           * @brief   Process  Measurement and Sensing profile call Callback function
    286          ********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    287          static void AT_ZCL_TEMP_EP_ENABLE( bool isEnable){
   \                     AT_ZCL_TEMP_EP_ENABLE:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    288            if(isEnable) {
   \   000006   6007         JZ      ??AT_ZCL_TEMP_EP_ENABLE_0
    289              AT_ZCL_TEMP_OnOffCB(COMMAND_ON);
   \   000008                ; Setup parameters for call to function AT_ZCL_TEMP_OnOffCB
   \   000008   7901         MOV     R1,#0x1
   \   00000A   12....       LCALL   ??AT_ZCL_TEMP_OnOffCB?relay
   \   00000D   8003         SJMP    ??AT_ZCL_TEMP_EP_ENABLE_1
    290            }
    291            else AT_ZCL_TEMP_BasicResetCB( );
   \                     ??AT_ZCL_TEMP_EP_ENABLE_0:
   \   00000F                ; Setup parameters for call to function AT_ZCL_TEMP_BasicResetCB
   \   00000F   12....       LCALL   ??AT_ZCL_TEMP_BasicResetCB?relay
    292          }
   \                     ??AT_ZCL_TEMP_EP_ENABLE_1:
   \   000012                REQUIRE ?Subroutine0
   \   000012                ; // Fall through to label ?Subroutine0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for AT_ZCL_TEMP_GEN_CmdCallbacks`:
   \   000000   ....         DW ??AT_ZCL_TEMP_BasicResetCB?relay
   \   000002   ....         DW ??AT_ZCL_TEMP_IdentifyCB?relay
   \   000004   0000         DW 0H
   \   000006   ....         DW ??AT_ZCL_TEMP_OnOffCB?relay
   \   000008   0000         DW 0H
   \   00000A   0000         DW 0H
   \   00000C   0000         DW 0H
   \   00000E   0000         DW 0H
   \   000010   0000         DW 0H
   \   000012   0000         DW 0H
   \   000014   0000         DW 0H
   \   000016   0000         DW 0H
   \   000018   0000         DW 0H
   \   00001A   0000         DW 0H
   \   00001C   0000         DB 0, 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for AT_ZCL_TEMP_MS_CmdCallbacks>`:
   \   000000   ....         DW ??AT_ZCL_TEMP_MS_PlaceHolder?relay

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_event_loop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_BasicResetCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_BasicResetCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_IdentifyCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_IdentifyCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_ProcessIdentifyTimeChange

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_OnOffCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_OnOffCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_MS_PlaceHolder?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_MS_PlaceHolder

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_ZCL_TEMP_EP_ENABLE?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_ZCL_TEMP_EP_ENABLE

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {(afAddrType_t *)0, 0}>`:
   \   000000   0000         DW 0H
   \   000002   0000         DW 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40c80000:
   \   000000   0000C840     DD 40C80000H
    293          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     AT_ZCL_TEMP_BasicResetCB           4      0     13
       -> AT_ZCL_TEMP_OnOffCB           4      0      8
       -> AT_ZCL_TEMP_IdentifyCB        4      0      8
     AT_ZCL_TEMP_EP_ENABLE              0      0      9
       -> AT_ZCL_TEMP_OnOffCB           0      0     18
       -> AT_ZCL_TEMP_BasicResetCB      0      0     18
     AT_ZCL_TEMP_IdentifyCB             2      0      4
       -> AT_ZCL_TEMP_ProcessIdentifyTimeChange
                                        4      0      0
     AT_ZCL_TEMP_Init                   0      0      9
       -> zclHA_Init                    0      0     18
       -> zclGeneral_RegisterCmdCallbacks
                                        0      0     18
       -> zclMS_RegisterCmdCallbacks
                                        0      0     18
       -> AT_ZCL_EP_ENABLE_Register     0      0     18
       -> zcl_registerAttrList          0      0     18
     AT_ZCL_TEMP_MS_PlaceHolder         0      0      0
     AT_ZCL_TEMP_OnOffCB                0      0     18
       -> osal_start_timerEx            0      0     18
       -> osal_stop_timerEx             0      0     18
     AT_ZCL_TEMP_ProcessIdentifyTimeChange
                                        2      0     16
       -> osal_start_timerEx            4      0      0
       -> HalLedBlink                   4      0      0
       -> osal_stop_timerEx             4      0      0
     AT_ZCL_TEMP_event_loop             0      0     16
       -> AT_ZCL_TEMP_ProcessIdentifyTimeChange
                                        0      0     32
       -> osal_msg_deallocate           0      0     32
       -> osal_msg_receive              0      0     32
       -> ReadDs18B20                   0      0     32
       -> osal_start_timerEx            0      0     32


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     AT_ZCL_TEMP_TaskID                                1
     AT_ZCL_TEMP_GEN_CmdCallbacks                     30
     AT_ZCL_TEMP_MS_CmdCallbacks                       2
     AT_ZCL_TEMP_Init                                 58
     ?Subroutine0                                      5
     AT_ZCL_TEMP_event_loop                          153
     ?Subroutine2                                      2
     ??Subroutine3_0                                  11
     AT_ZCL_TEMP_BasicResetCB                         53
     ?Subroutine1                                      7
     AT_ZCL_TEMP_IdentifyCB                           28
     AT_ZCL_TEMP_ProcessIdentifyTimeChange
                                                      60
     AT_ZCL_TEMP_OnOffCB                              65
     AT_ZCL_TEMP_MS_PlaceHolder                        3
     AT_ZCL_TEMP_EP_ENABLE                            18
     ?<Initializer for AT_ZCL_TEMP_GEN_CmdCallbacks   30
     ?<Initializer for AT_ZCL_TEMP_MS_CmdCallbacks>    2
     ??AT_ZCL_TEMP_Init?relay                          6
     ??AT_ZCL_TEMP_event_loop?relay                    6
     ??AT_ZCL_TEMP_BasicResetCB?relay                  6
     ??AT_ZCL_TEMP_IdentifyCB?relay                    6
     ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay     6
     ??AT_ZCL_TEMP_OnOffCB?relay                       6
     ??AT_ZCL_TEMP_MS_PlaceHolder?relay                6
     ??AT_ZCL_TEMP_EP_ENABLE?relay                     6
     ?<Constant {(afAddrType_t *)0, 0}>                4
     __Constant_40c80000                               4

 
 463 bytes in segment BANKED_CODE
  48 bytes in segment BANK_RELAYS
  32 bytes in segment XDATA_I
  32 bytes in segment XDATA_ID
   8 bytes in segment XDATA_ROM_C
   1 byte  in segment XDATA_Z
 
 543 bytes of CODE  memory
   4 bytes of CONST memory (+ 4 bytes shared)
  33 bytes of XDATA memory

Errors: none
Warnings: none
