///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        15/Jun/2015  20:13:07 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  S:\zigbee\Myzigbe\version 3.0 for new             /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\Source\AT_ZCL_temperature /
//                          .c                                                /
//    Command line       =  -f "S:\zigbee\Myzigbe\version 3.0 for new         /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wCoord.cfg" (-DCPU32MHZ                 /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f "S:\zigbee\Myzigbe\version 3.0 for new         /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wConfig.cfg" (-DZIGBEEPRO -DSECURE=0    /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x2015                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "S:\zigbee\Myzigbe\version /
//                           3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \AT commands\AT command                           /
//                          3.2\Source\AT_ZCL_temperature.c" -D ZIGBEEPRO -D  /
//                          NWK_AUTO_POLL -D HAL_UART=TRUE -D                 /
//                          HOLD_AUTO_START -D NV_RESTORE -D REFLECTOR -D     /
//                          HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D               /
//                          xHAL_UART_ISR_TX_MAX=200 -D xPOWER_SAVING -D      /
//                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D          /
//                          ZCL_ON_OFF -D ZCL_DISCOVER -D xZTOOL_P1 -D        /
//                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D       /
//                          xLCD_SUPPORTED=DEBUG -D                           /
//                          xMT_UART_DEFAULT_OVERFLOW=FALSE -lC               /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Li /
//                          st\" -lA "S:\zigbee\Myzigbe\version 3.0 for new   /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Li /
//                          st\" --diag_suppress Pe001,Pa010 -o               /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Ob /
//                          j\" -e --no_code_motion --debug --core=plain      /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\" -I             /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\Source\" -I   /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\ZMain\T /
//                          I2530DB\" -I "S:\zigbee\Myzigbe\version 3.0 for   /
//                          new ZStack-CC2530-2.5.1a\Projects\zstack\AT       /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\hal\include\" -I                        /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\hal\target\CC2530EB\" -I                /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\include\" -I                        /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\high_level\" -I                     /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\low_level\srf04\" -I                /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\low_level\srf04\single_chip\" -I    /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\mt\" -I "S:\zigbee\Myzigbe\version 3.0  /
//                          for new ZStack-CC2530-2.5.1a\Projects\zstack\AT   /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\osal\include\" -I                       /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\services\saddr\" -I                     /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\services\sdata\" -I                     /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\af\" -I                           /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\nwk\" -I                          /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sapi\" -I                         /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sec\" -I                          /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sys\" -I                          /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\zdo\" -I                          /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\zcl\" -I                          /
//                          "S:\zigbee\Myzigbe\version 3.0 for new            /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\C /
//                          omponents\zmac\" -I "S:\zigbee\Myzigbe\version    /
//                          3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\ /
//                          AT commands\AT command 3.2\CC2530DB\..\..\..\..\. /
//                          .\Components\zmac\f8w\" -Ohz --require_prototypes /
//    List file          =  S:\zigbee\Myzigbe\version 3.0 for new             /
//                          ZStack-CC2530-2.5.1a\Projects\zstack\AT           /
//                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Li /
//                          st\AT_ZCL_temperature.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME AT_ZCL_temperature

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_MUL
        EXTERN ?FLT_TO_L
        EXTERN ?L_MOV_X
        EXTERN ?L_TO_FLT
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        FUNCTION ??AT_ZCL_TEMP_BasicResetCB?relay,0203H
        FUNCTION ??AT_ZCL_TEMP_EP_ENABLE?relay,0203H
        FUNCTION ??AT_ZCL_TEMP_IdentifyCB?relay,0203H
        PUBLIC ??AT_ZCL_TEMP_Init?relay
        FUNCTION ??AT_ZCL_TEMP_Init?relay,0203H
        FUNCTION ??AT_ZCL_TEMP_MS_PlaceHolder?relay,0203H
        FUNCTION ??AT_ZCL_TEMP_OnOffCB?relay,0203H
        FUNCTION ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay,0203H
        PUBLIC ??AT_ZCL_TEMP_event_loop?relay
        FUNCTION ??AT_ZCL_TEMP_event_loop?relay,0203H
        FUNCTION AT_ZCL_TEMP_BasicResetCB,021603H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        LOCFRAME XSTACK, 4, STACK
        FUNCTION AT_ZCL_TEMP_EP_ENABLE,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION AT_ZCL_TEMP_IdentifyCB,021603H
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC AT_ZCL_TEMP_Init
        FUNCTION AT_ZCL_TEMP_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION AT_ZCL_TEMP_MS_PlaceHolder,0603H
        ARGFRAME XSTACK, 0, STACK
        FUNCTION AT_ZCL_TEMP_OnOffCB,021603H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION AT_ZCL_TEMP_ProcessIdentifyTimeChange,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC AT_ZCL_TEMP_TaskID
        PUBLIC AT_ZCL_TEMP_event_loop
        FUNCTION AT_ZCL_TEMP_event_loop,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK __Constant_40c80000
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
zclHA_Init          SYMBOL "zclHA_Init"
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
zclMS_RegisterCmdCallbacks SYMBOL "zclMS_RegisterCmdCallbacks"
AT_ZCL_EP_ENABLE_Register SYMBOL "AT_ZCL_EP_ENABLE_Register"
zcl_registerAttrList SYMBOL "zcl_registerAttrList"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_msg_receive    SYMBOL "osal_msg_receive"
ReadDs18B20         SYMBOL "ReadDs18B20"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
HalLedBlink         SYMBOL "HalLedBlink"
HalLedSet           SYMBOL "HalLedSet"
osal_stop_timerEx   SYMBOL "osal_stop_timerEx"
??AT_ZCL_EP_ENABLE_Register?relay SYMBOL "?relay", AT_ZCL_EP_ENABLE_Register
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??ReadDs18B20?relay SYMBOL "?relay", ReadDs18B20
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??osal_stop_timerEx?relay SYMBOL "?relay", osal_stop_timerEx
??zclGeneral_RegisterCmdCallbacks?relay SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
??zclHA_Init?relay  SYMBOL "?relay", zclHA_Init
??zclMS_RegisterCmdCallbacks?relay SYMBOL "?relay", zclMS_RegisterCmdCallbacks
??zcl_registerAttrList?relay SYMBOL "?relay", zcl_registerAttrList
AT_ZCL_TEMP_Init    SYMBOL "AT_ZCL_TEMP_Init"
??AT_ZCL_TEMP_Init?relay SYMBOL "?relay", AT_ZCL_TEMP_Init
AT_ZCL_TEMP_event_loop SYMBOL "AT_ZCL_TEMP_event_loop"
??AT_ZCL_TEMP_event_loop?relay SYMBOL "?relay", AT_ZCL_TEMP_event_loop

        EXTERN zclHA_Init
        FUNCTION zclHA_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zclMS_RegisterCmdCallbacks
        FUNCTION zclMS_RegisterCmdCallbacks,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AT_ZCL_EP_ENABLE_Register
        FUNCTION AT_ZCL_EP_ENABLE_Register,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerAttrList
        FUNCTION zcl_registerAttrList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ReadDs18B20
        FUNCTION ReadDs18B20,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_stop_timerEx
        FUNCTION osal_stop_timerEx,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AT_ZCL_EP_ENABLE_Register?relay
        FUNCTION ??AT_ZCL_EP_ENABLE_Register?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??ReadDs18B20?relay
        FUNCTION ??ReadDs18B20?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??osal_stop_timerEx?relay
        FUNCTION ??osal_stop_timerEx?relay,00H
        EXTERN ??zclGeneral_RegisterCmdCallbacks?relay
        FUNCTION ??zclGeneral_RegisterCmdCallbacks?relay,00H
        EXTERN ??zclHA_Init?relay
        FUNCTION ??zclHA_Init?relay,00H
        EXTERN ??zclMS_RegisterCmdCallbacks?relay
        FUNCTION ??zclMS_RegisterCmdCallbacks?relay,00H
        EXTERN ??zcl_registerAttrList?relay
        FUNCTION ??zcl_registerAttrList?relay,00H
        EXTERN AT_ZCL_TEMP_Attrs
        EXTERN AT_ZCL_TEMP_IdentifyTime
        EXTERN AT_ZCL_TEMP_OnOff
        EXTERN AT_ZCL_TEMP_SimpleDesc
        EXTERN AT_ZCL_TEMP_current

// S:\zigbee\Myzigbe\version 3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\AT commands\AT command 3.2\Source\AT_ZCL_temperature.c
//    1 
//    2 /*********************************************************************
//    3  * INCLUDES
//    4  */
//    5 #include "ZComDef.h"
//    6 #include "OSAL.h"
//    7 #include "AF.h"
//    8 #include "ZDApp.h"
//    9 
//   10 #include "zcl.h"
//   11 #include "zcl_general.h"
//   12 #include "zcl_ms.h"
//   13 #include "zcl_ha.h"
//   14 #include "AT_ZCL.h"
//   15 #include "AT_uart.h"
//   16 #include "AT_ZCL_temperature.h"
//   17 #include "AT_ds18b20.h" 
//   18 
//   19 #include "onboard.h"
//   20 
//   21 /* HAL */
//   22 #include "hal_led.h"
//   23 #include "hal_key.h"
//   24 
//   25 /*********************************************************************
//   26  * GLOBAL VARIABLES
//   27  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   28 byte AT_ZCL_TEMP_TaskID;
AT_ZCL_TEMP_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   29 
//   30 /*********************************************************************
//   31  * LOCAL FUNCTION
//   32  */
//   33 static void AT_ZCL_TEMP_IdentifyCB( zclIdentify_t *pCmd );
//   34 static void AT_ZCL_TEMP_BasicResetCB( void );
//   35 static void AT_ZCL_TEMP_ProcessIdentifyTimeChange( void );
//   36 static void AT_ZCL_TEMP_OnOffCB( uint8 cmd );
//   37 static void AT_ZCL_TEMP_update(void);
//   38 static void AT_ZCL_TEMP_MS_PlaceHolder( void );
//   39 static void AT_ZCL_TEMP_EP_ENABLE( bool isEnable);
//   40 
//   41 /*********************************************************************
//   42  * ZCL General Profile Callback table
//   43  */

        RSEG XDATA_I:XDATA:NOROOT(0)
//   44 static zclGeneral_AppCallbacks_t AT_ZCL_TEMP_GEN_CmdCallbacks =
AT_ZCL_TEMP_GEN_CmdCallbacks:
        DATA8
        DS 30
        REQUIRE `?<Initializer for AT_ZCL_TEMP_GEN_CmdCallbacks`
        REQUIRE __INIT_XDATA_I
//   45 { 
//   46   AT_ZCL_TEMP_BasicResetCB,                 // Basic Cluster Reset command
//   47   AT_ZCL_TEMP_IdentifyCB,                   // Identify command   
//   48   NULL,                                    // Identify Query Response command
//   49   AT_ZCL_TEMP_OnOffCB,                      // On/Off cluster command
//   50   NULL,                                     // Level Control Move to Level command
//   51   NULL,                                     // Level Control Move command
//   52   NULL,                                     // Level Control Step command
//   53   NULL,                                     // Group Response commands
//   54   NULL,                                     // Scene Store Request command
//   55   NULL,                                     // Scene Recall Request command
//   56   NULL,                                     // Scene Response command
//   57   NULL,                                     // Alarm (Response) command
//   58   NULL,                                     // RSSI Location commands
//   59   NULL,                                     // RSSI Location Response commands
//   60 };
//   61 /*********************************************************************
//   62  * ZCL Measurement and Sensing Profile Callback table
//   63  */

        RSEG XDATA_I:XDATA:NOROOT(0)
//   64 static zclMS_AppCallbacks_t AT_ZCL_TEMP_MS_CmdCallbacks=
AT_ZCL_TEMP_MS_CmdCallbacks:
        DATA16
        DS 2
        REQUIRE `?<Initializer for AT_ZCL_TEMP_MS_CmdCallbacks>`
        REQUIRE __INIT_XDATA_I
//   65 {
//   66   AT_ZCL_TEMP_MS_PlaceHolder,                                     //// Place Holder
//   67 };
//   68 
//   69 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   70 void AT_ZCL_TEMP_Init( byte task_id )
AT_ZCL_TEMP_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_Init
        CODE
//   71 {
        FUNCALL AT_ZCL_TEMP_Init, zclHA_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_Init, zclGeneral_RegisterCmdCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_Init, zclMS_RegisterCmdCallbacks
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_Init, AT_ZCL_EP_ENABLE_Register
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_Init, zcl_registerAttrList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   72   AT_ZCL_TEMP_TaskID = task_id;
        MOV     DPTR,#AT_ZCL_TEMP_TaskID
        MOVX    @DPTR,A
//   73 
//   74   // This app is part of the Home Automation Profile
//   75   zclHA_Init( &AT_ZCL_TEMP_SimpleDesc );
        ; Setup parameters for call to function zclHA_Init
        MOV     R2,#AT_ZCL_TEMP_SimpleDesc & 0xff
        MOV     R3,#(AT_ZCL_TEMP_SimpleDesc >> 8) & 0xff
        LCALL   ??zclHA_Init?relay
//   76 
//   77   // Register the ZCL General Cluster Library callback functions
//   78   zclGeneral_RegisterCmdCallbacks( AT_ZCL_TEMP_ENDPOINT, &AT_ZCL_TEMP_GEN_CmdCallbacks );
        ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
        MOV     R2,#AT_ZCL_TEMP_GEN_CmdCallbacks & 0xff
        MOV     R3,#(AT_ZCL_TEMP_GEN_CmdCallbacks >> 8) & 0xff
        MOV     R1,#0x4
        LCALL   ??zclGeneral_RegisterCmdCallbacks?relay
//   79   
//   80   // Register the ZCL Measurement and Sensing Cluster Library callback functions
//   81   zclMS_RegisterCmdCallbacks( AT_ZCL_TEMP_ENDPOINT, &AT_ZCL_TEMP_MS_CmdCallbacks );
        ; Setup parameters for call to function zclMS_RegisterCmdCallbacks
        MOV     R2,#AT_ZCL_TEMP_MS_CmdCallbacks & 0xff
        MOV     R3,#(AT_ZCL_TEMP_MS_CmdCallbacks >> 8) & 0xff
        MOV     R1,#0x4
        LCALL   ??zclMS_RegisterCmdCallbacks?relay
//   82 
//   83   //register for AT command system enable/disable call back function
//   84   AT_ZCL_EP_ENABLE_Register(  AT_ZCL_TEMP_ENDPOINT,AT_ZCL_TEMP_EP_ENABLE);
        ; Setup parameters for call to function AT_ZCL_EP_ENABLE_Register
        MOV     R2,#??AT_ZCL_TEMP_EP_ENABLE?relay & 0xff
        MOV     R3,#(??AT_ZCL_TEMP_EP_ENABLE?relay >> 8) & 0xff
        MOV     R1,#0x4
        LCALL   ??AT_ZCL_EP_ENABLE_Register?relay
//   85   
//   86   // Register the application's attribute list
//   87   zcl_registerAttrList( AT_ZCL_TEMP_ENDPOINT, AT_ZCL_TEMP_MAX_ATTRIBUTES, AT_ZCL_TEMP_Attrs );
        ; Setup parameters for call to function zcl_registerAttrList
        MOV     R4,#AT_ZCL_TEMP_Attrs & 0xff
        MOV     R5,#(AT_ZCL_TEMP_Attrs >> 8) & 0xff
        MOV     R2,#0xc
        MOV     R1,#0x4
        LCALL   ??zcl_registerAttrList?relay
//   88 
//   89 
//   90   
//   91 }
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock0
//   92 
//   93 
//   94 
//   95 /*********************************************************************
//   96  * @fn          zclSample_event_loop
//   97  *
//   98  * @brief       Event Loop Processor for zclGeneral.
//   99  *
//  100  * @param       none
//  101  *
//  102  * @return      none
//  103  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  104 uint16 AT_ZCL_TEMP_event_loop( uint8 task_id, uint16 events )
AT_ZCL_TEMP_event_loop:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_event_loop
        CODE
//  105 {
        FUNCALL AT_ZCL_TEMP_event_loop, AT_ZCL_TEMP_ProcessIdentifyTimeChange
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_event_loop, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_event_loop, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_event_loop, ReadDs18B20
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_event_loop, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  106   afIncomingMSGPacket_t *MSGpkt;
//  107   
//  108   (void)task_id;  // Intentionally unreferenced parameter
//  109 
//  110   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JNZ     ??AT_ZCL_TEMP_event_loop_0
//  111   {
//  112     while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( AT_ZCL_TEMP_TaskID )) )
//  113     {
//  114       switch ( MSGpkt->hdr.event )
//  115       { 
//  116          default:
//  117           break;
//  118       }
//  119       // Release the memory
//  120       osal_msg_deallocate( (uint8 *)MSGpkt );
//  121     }
//  122 
//  123     // return unprocessed events
//  124     return (events ^ SYS_EVENT_MSG);
//  125   }
//  126 
//  127   if ( events & AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT )
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??AT_ZCL_TEMP_event_loop_1
//  128   {
//  129     if (AT_ZCL_TEMP_IdentifyTime > 0 )
        MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??AT_ZCL_TEMP_event_loop_2
//  130       AT_ZCL_TEMP_IdentifyTime--;
        MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
//  131     AT_ZCL_TEMP_ProcessIdentifyTimeChange();
??AT_ZCL_TEMP_event_loop_2:
        ; Setup parameters for call to function AT_ZCL_TEMP_ProcessIdentifyTimeChange
        LCALL   ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay
//  132 
//  133     return ( events ^ AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT );
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
??AT_ZCL_TEMP_event_loop_3:
        MOV     R3,A
        SJMP    ??AT_ZCL_TEMP_event_loop_4
//  134   }
??AT_ZCL_TEMP_event_loop_5:
        ; Setup parameters for call to function osal_msg_deallocate
        LCALL   ??osal_msg_deallocate?relay
??AT_ZCL_TEMP_event_loop_0:
        ; Setup parameters for call to function osal_msg_receive
        MOV     DPTR,#AT_ZCL_TEMP_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     A,R2
        ORL     A,R3
        JNZ     ??AT_ZCL_TEMP_event_loop_5
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
        SJMP    ??AT_ZCL_TEMP_event_loop_3
//  135   //measure the temperature
//  136   if ( events & AT_ZCL_TEMP_TEMP_MEASURE_EVT )
??AT_ZCL_TEMP_event_loop_1:
        ANL     A,#0x2
        JZ      ??AT_ZCL_TEMP_event_loop_6
//  137   {
//  138     AT_ZCL_TEMP_update();
        ; Setup parameters for call to function ReadDs18B20
        LCALL   ??ReadDs18B20?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R3
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_40c80000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPTR,#AT_ZCL_TEMP_current
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  139     osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT, 1000 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x18
        MOV     R5,#0x3
        LCALL   ?Subroutine3 & 0xFFFF
//  140     return ( events ^ AT_ZCL_TEMP_TEMP_MEASURE_EVT );
??CrossCallReturnLabel_2:
        MOV     A,R6
        XRL     A,#0x2
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??AT_ZCL_TEMP_event_loop_4
//  141   }
//  142 
//  143   // Discard unknown events
//  144   return 0;
??AT_ZCL_TEMP_event_loop_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
??AT_ZCL_TEMP_event_loop_4:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  145 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiCond2 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond3 Using cfiCommon0
        CFI (cfiCond3) NoFunction
        CFI (cfiCond3) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond3) CFA_SP SP+0
        CFI (cfiCond3) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker4 Using cfiCommon1
        CFI (cfiPicker4) NoFunction
        CFI (cfiPicker4) Picker
        MOV     R2,#0x2
        CFI EndBlock cfiCond2
        CFI EndBlock cfiCond3
        CFI EndBlock cfiPicker4
        REQUIRE ??Subroutine4_0
        ; // Fall through to label ??Subroutine4_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine4_0:
        CFI Block cfiCond5 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_4
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond6) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond7 Using cfiCommon0
        CFI (cfiCond7) NoFunction
        CFI (cfiCond7) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond7) CFA_SP SP+0
        CFI (cfiCond7) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker8 Using cfiCommon1
        CFI (cfiPicker8) NoFunction
        CFI (cfiPicker8) Picker
        MOV     R3,#0x0
        MOV     DPTR,#AT_ZCL_TEMP_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
        RET
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiCond7
        CFI EndBlock cfiPicker8
//  146 
//  147 
//  148 
//  149 
//  150 /*********************************************************************
//  151  * @fn      AT_ZCL_TEMP_BasicResetCB
//  152  *
//  153  * @brief   Callback from the ZCL General Cluster Library
//  154  *          to set all the Basic Cluster attributes to default values.
//  155  *
//  156  * @param   none
//  157  *
//  158  * @return  none
//  159  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  160 static void AT_ZCL_TEMP_BasicResetCB( void )
AT_ZCL_TEMP_BasicResetCB:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_BasicResetCB
        CODE
//  161 {
        FUNCALL AT_ZCL_TEMP_BasicResetCB, AT_ZCL_TEMP_OnOffCB
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 4, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_BasicResetCB, AT_ZCL_TEMP_IdentifyCB
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 4, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 4)
//  162   // Reset all attributes to default values
//  163   AT_ZCL_TEMP_OnOffCB(COMMAND_OFF);
        ; Setup parameters for call to function AT_ZCL_TEMP_OnOffCB
        MOV     R1,#0x0
        LCALL   ??AT_ZCL_TEMP_OnOffCB?relay
//  164   
//  165   zclIdentify_t identifyCmd={NULL,0};
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(afAddrType_t *)0, 0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(afAddrType_t *)0, 0}>` & 0xff
        MOV     A,#0x4
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  166   AT_ZCL_TEMP_IdentifyCB( &identifyCmd );
        ; Setup parameters for call to function AT_ZCL_TEMP_IdentifyCB
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AT_ZCL_TEMP_IdentifyCB?relay
//  167 }
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock9
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock10
//  168 
//  169 
//  170 /*********************************************************************
//  171  * @fn      AT_ZCL_TEMP_IdentifyCB
//  172  *
//  173  * @brief   Callback from the ZCL General Cluster Library when
//  174  *          it received an Identity Command for this application.
//  175  *
//  176  * @param   srcAddr - source address and endpoint of the response message
//  177  * @param   identifyTime - the number of seconds to identify yourself
//  178  *
//  179  * @return  none
//  180  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  181 static void AT_ZCL_TEMP_IdentifyCB( zclIdentify_t *pCmd )
AT_ZCL_TEMP_IdentifyCB:
        CFI Block cfiBlock11 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_IdentifyCB
        CODE
//  182 {
        FUNCALL AT_ZCL_TEMP_IdentifyCB, AT_ZCL_TEMP_ProcessIdentifyTimeChange
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  183   AT_ZCL_TEMP_IdentifyTime = pCmd->identifyTime;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  184   AT_ZCL_TEMP_ProcessIdentifyTimeChange();
        ; Setup parameters for call to function AT_ZCL_TEMP_ProcessIdentifyTimeChange
        LCALL   ??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay
//  185 }
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock11
//  186 
//  187 
//  188 
//  189 /*********************************************************************
//  190  * @fn      AT_ZCL_TEMP_ProcessIdentifyTimeChange
//  191  *
//  192  * @brief   Called to process any change to the IdentifyTime attribute.
//  193  *
//  194  * @param   none
//  195  *
//  196  * @return  none
//  197  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  198 static void AT_ZCL_TEMP_ProcessIdentifyTimeChange( void )
AT_ZCL_TEMP_ProcessIdentifyTimeChange:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_ProcessIdentifyTimeChange
        CODE
//  199 {
        FUNCALL AT_ZCL_TEMP_ProcessIdentifyTimeChange, osal_start_timerEx
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_ProcessIdentifyTimeChange, HalLedBlink
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_ProcessIdentifyTimeChange, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_ProcessIdentifyTimeChange, HalLedSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_ProcessIdentifyTimeChange, osal_stop_timerEx
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  200   if ( AT_ZCL_TEMP_IdentifyTime > 0 )
        MOV     DPTR,#AT_ZCL_TEMP_IdentifyTime
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_0
//  201   {
//  202     osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT, 1000 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R2,#0x1
        LCALL   ??Subroutine4_0 & 0xFFFF
//  203     HalLedBlink ( HAL_LED_3, 0xFF, HAL_LED_DEFAULT_DUTY_CYCLE, HAL_LED_DEFAULT_FLASH_TIME );
??CrossCallReturnLabel_4:
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R3,#0x5
        MOV     R2,#-0x1
        MOV     R1,#0x4
        LCALL   ??HalLedBlink?relay
        SJMP    ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_1
//  204   }
//  205   else
//  206   {
//  207     if ( AT_ZCL_TEMP_OnOff )
??AT_ZCL_TEMP_ProcessIdentifyTimeChange_0:
        MOV     DPTR,#AT_ZCL_TEMP_OnOff
        MOVX    A,@DPTR
        JZ      ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_2
//  208       HalLedSet ( HAL_LED_3, HAL_LED_MODE_ON );
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        SJMP    ??AT_ZCL_TEMP_ProcessIdentifyTimeChange_3
//  209     else
//  210       HalLedSet ( HAL_LED_3, HAL_LED_MODE_OFF );
??AT_ZCL_TEMP_ProcessIdentifyTimeChange_2:
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x0
??AT_ZCL_TEMP_ProcessIdentifyTimeChange_3:
        MOV     R1,#0x4
        LCALL   ??HalLedSet?relay
//  211     osal_stop_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_IDENTIFY_TIMEOUT_EVT );
        ; Setup parameters for call to function osal_stop_timerEx
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#AT_ZCL_TEMP_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_stop_timerEx?relay
//  212   }
//  213 }
??AT_ZCL_TEMP_ProcessIdentifyTimeChange_1:
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock12
//  214 
//  215 
//  216 /*********************************************************************
//  217  * @fn      void AT_ZCL_TEMP_update
//  218  *
//  219  * @brief   updata the Device Temperature Configuration Cluster every second
//  220  *
//  221  * @param   none
//  222  *
//  223  * @return  none
//  224  *
//  225 ************************************************************/
//  226 static void AT_ZCL_TEMP_update(void){
//  227   uint16 temp = ReadDs18B20();
//  228   AT_ZCL_TEMP_current =(int16)((*(int16*) & temp)*6.25);
//  229   
//  230 }
//  231 
//  232 
//  233 /*********************************************************************
//  234  * @fn      AT_ZCL_TEMP_OnOffCB
//  235  *
//  236  * @brief   Callback from the ZCL General Cluster Library when
//  237  *          it received an On/Off Command for this application.
//  238  *
//  239  * @param   cmd - COMMAND_ON, COMMAND_OFF or COMMAND_TOGGLE
//  240  *
//  241  * @return  none
//  242  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  243 static void AT_ZCL_TEMP_OnOffCB( uint8 cmd )
AT_ZCL_TEMP_OnOffCB:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_OnOffCB
        CODE
//  244 {
        FUNCALL AT_ZCL_TEMP_OnOffCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_OnOffCB, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_OnOffCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_OnOffCB, osal_stop_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  245   // Turn on the light
//  246   if ( cmd == COMMAND_ON )
        MOV     A,#0x1
        XRL     A,R6
        JNZ     ??AT_ZCL_TEMP_OnOffCB_0
//  247     AT_ZCL_TEMP_OnOff = TEMP_ON;
??AT_ZCL_TEMP_OnOffCB_1:
        MOV     DPTR,#AT_ZCL_TEMP_OnOff
        MOV     A,#0x1
        LCALL   ?Subroutine2 & 0xFFFF
//  248 
//  249   // Turn off the light
//  250   else if ( cmd == COMMAND_OFF )
//  251     AT_ZCL_TEMP_OnOff = TEMP_OFF;
//  252 
//  253   // Toggle the light
//  254   else
//  255   {
//  256     if ( AT_ZCL_TEMP_OnOff == TEMP_OFF )
//  257       AT_ZCL_TEMP_OnOff = TEMP_ON;
//  258     else
//  259       AT_ZCL_TEMP_OnOff = TEMP_OFF;
//  260   }
//  261 
//  262   // In this sample app, we use LED3 to simulate the Light
//  263   if (AT_ZCL_TEMP_OnOff == TEMP_ON ){
//  264     HalLedSet( HAL_LED_3, HAL_LED_MODE_ON );
//  265     osal_start_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT, 10 );
??CrossCallReturnLabel_0:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0xa
        MOV     R5,#0x0
        LCALL   ?Subroutine3 & 0xFFFF
//  266   }else{
//  267     HalLedSet( HAL_LED_3, HAL_LED_MODE_OFF );
//  268     osal_stop_timerEx( AT_ZCL_TEMP_TaskID, AT_ZCL_TEMP_TEMP_MEASURE_EVT );
//  269     AT_ZCL_TEMP_current=0x8000;   //0x8000 indicates that the temperature measurement is invalid.
//  270   }
//  271 }
??CrossCallReturnLabel_3:
        SJMP    ?Subroutine0
??AT_ZCL_TEMP_OnOffCB_0:
        MOV     A,R6
        JNZ     ??AT_ZCL_TEMP_OnOffCB_2
??AT_ZCL_TEMP_OnOffCB_3:
        MOV     DPTR,#AT_ZCL_TEMP_OnOff
        CLR     A
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_1:
        ; Setup parameters for call to function osal_stop_timerEx
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#AT_ZCL_TEMP_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_stop_timerEx?relay
        MOV     DPTR,#AT_ZCL_TEMP_current
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        MOVX    @DPTR,A
        SJMP    ??CrossCallReturnLabel_3
??AT_ZCL_TEMP_OnOffCB_2:
        MOV     DPTR,#AT_ZCL_TEMP_OnOff
        MOVX    A,@DPTR
        JNZ     ??AT_ZCL_TEMP_OnOffCB_3
        SJMP    ??AT_ZCL_TEMP_OnOffCB_1
        CFI EndBlock cfiBlock13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiCond14 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond15 Using cfiCommon0
        CFI (cfiCond15) NoFunction
        CFI (cfiCond15) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond15) CFA_SP SP+0
        CFI (cfiCond15) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker16 Using cfiCommon1
        CFI (cfiPicker16) NoFunction
        CFI (cfiPicker16) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function HalLedSet
        ; Setup parameters for call to function HalLedSet
        MOV     R2,A
        MOV     R1,#0x4
        LCALL   ??HalLedSet?relay
        RET
        CFI EndBlock cfiCond14
        CFI EndBlock cfiCond15
        CFI EndBlock cfiPicker16
//  272 
//  273 /******************************************************
//  274  * @fn      AT_ZCL_TEMP_MS_PlaceHolder
//  275  *
//  276  * @brief   Process  Measurement and Sensing profile call Callback function
//  277 ********************************************************/
//  278 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  279 static void AT_ZCL_TEMP_MS_PlaceHolder( void){
AT_ZCL_TEMP_MS_PlaceHolder:
        CFI Block cfiBlock17 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_MS_PlaceHolder
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  280 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock17
//  281 
//  282 
//  283 /******************************************************
//  284  * @fn      AT_ZCL_TEMP_EP_ENABLE
//  285  *
//  286  * @brief   Process  Measurement and Sensing profile call Callback function
//  287 ********************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  288 static void AT_ZCL_TEMP_EP_ENABLE( bool isEnable){
AT_ZCL_TEMP_EP_ENABLE:
        CFI Block cfiBlock18 Using cfiCommon0
        CFI Function AT_ZCL_TEMP_EP_ENABLE
        CODE
        FUNCALL AT_ZCL_TEMP_EP_ENABLE, AT_ZCL_TEMP_OnOffCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL AT_ZCL_TEMP_EP_ENABLE, AT_ZCL_TEMP_BasicResetCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//  289   if(isEnable) {
        JZ      ??AT_ZCL_TEMP_EP_ENABLE_0
//  290     AT_ZCL_TEMP_OnOffCB(COMMAND_ON);
        ; Setup parameters for call to function AT_ZCL_TEMP_OnOffCB
        MOV     R1,#0x1
        LCALL   ??AT_ZCL_TEMP_OnOffCB?relay
        SJMP    ??AT_ZCL_TEMP_EP_ENABLE_1
//  291   }
//  292   else AT_ZCL_TEMP_BasicResetCB( );
??AT_ZCL_TEMP_EP_ENABLE_0:
        ; Setup parameters for call to function AT_ZCL_TEMP_BasicResetCB
        LCALL   ??AT_ZCL_TEMP_BasicResetCB?relay
        CFI EndBlock cfiBlock18
//  293 }
??AT_ZCL_TEMP_EP_ENABLE_1:
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock19 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock19

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for AT_ZCL_TEMP_GEN_CmdCallbacks`:
        DATA16
        DW ??AT_ZCL_TEMP_BasicResetCB?relay
        DW ??AT_ZCL_TEMP_IdentifyCB?relay
        DW 0H
        DW ??AT_ZCL_TEMP_OnOffCB?relay
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DW 0H
        DB 0, 0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for AT_ZCL_TEMP_MS_CmdCallbacks>`:
        DATA16
        DW ??AT_ZCL_TEMP_MS_PlaceHolder?relay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_event_loop?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_event_loop

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_BasicResetCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_BasicResetCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_IdentifyCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_IdentifyCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_ProcessIdentifyTimeChange?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_ProcessIdentifyTimeChange

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_OnOffCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_OnOffCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_MS_PlaceHolder?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_MS_PlaceHolder

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??AT_ZCL_TEMP_EP_ENABLE?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    AT_ZCL_TEMP_EP_ENABLE

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant {(afAddrType_t *)0, 0}>`:
        DATA16
        DW 0H
        DW 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_40c80000:
        DD 40C80000H

        END
//  294 
// 
// 487 bytes in segment BANKED_CODE
//  48 bytes in segment BANK_RELAYS
//  32 bytes in segment XDATA_I
//  32 bytes in segment XDATA_ID
//   8 bytes in segment XDATA_ROM_C
//   1 byte  in segment XDATA_Z
// 
// 567 bytes of CODE  memory
//   4 bytes of CONST memory (+ 4 bytes shared)
//  33 bytes of XDATA memory
//
//Errors: none
//Warnings: none
