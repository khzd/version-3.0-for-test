###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         15/Jun/2015  20:13:07 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  S:\zigbee\Myzigbe\version 3.0 for new              #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\Source\AT_App.c            #
#    Command line       =  -f "S:\zigbee\Myzigbe\version 3.0 for new          #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\Tools\CC #
#                          2530DB\f8wCoord.cfg" (-DCPU32MHZ                   #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "S:\zigbee\Myzigbe\version 3.0 for new          #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\Tools\CC #
#                          2530DB\f8wConfig.cfg" (-DZIGBEEPRO -DSECURE=0      #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x2015                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "S:\zigbee\Myzigbe\version  #
#                          3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\A #
#                          T commands\AT command 3.2\Source\AT_App.c" -D      #
#                          ZIGBEEPRO -D NWK_AUTO_POLL -D HAL_UART=TRUE -D     #
#                          HOLD_AUTO_START -D NV_RESTORE -D REFLECTOR -D      #
#                          HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D                #
#                          xHAL_UART_ISR_TX_MAX=200 -D xPOWER_SAVING -D       #
#                          ZCL_READ -D ZCL_WRITE -D ZCL_IDENTIFY -D           #
#                          ZCL_ON_OFF -D ZCL_DISCOVER -D xZTOOL_P1 -D         #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          xLCD_SUPPORTED=DEBUG -D xMT_UART_DEFAULT_OVERFLOW= #
#                          FALSE -lC "S:\zigbee\Myzigbe\version 3.0 for new   #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Lis #
#                          t\" -lA "S:\zigbee\Myzigbe\version 3.0 for new     #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Lis #
#                          t\" --diag_suppress Pe001,Pa010 -o                 #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Obj #
#                          \" -e --no_code_motion --debug --core=plain        #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "S:\zigbee\Myzigbe\version #
#                           3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\ #
#                          AT commands\AT command 3.2\CC2530DB\" -I           #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\Source\" -I    #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\ZMain\TI #
#                          2530DB\" -I "S:\zigbee\Myzigbe\version 3.0 for     #
#                          new ZStack-CC2530-2.5.1a\Projects\zstack\AT        #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\hal\include\" -I                          #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\hal\target\CC2530EB\" -I                  #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\include\" -I                          #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\high_level\" -I                       #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\low_level\srf04\" -I                  #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\low_level\srf04\single_chip\" -I      #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mt\" -I "S:\zigbee\Myzigbe\version 3.0    #
#                          for new ZStack-CC2530-2.5.1a\Projects\zstack\AT    #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\services\saddr\" -I                       #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\services\sdata\" -I                       #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\af\" -I "S:\zigbee\Myzigbe\version  #
#                          3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\A #
#                          T commands\AT command 3.2\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\nwk\" -I                          #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\sapi\" -I                           #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\sec\" -I "S:\zigbee\Myzigbe\version #
#                           3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\ #
#                          AT commands\AT command 3.2\CC2530DB\..\..\..\..\.. #
#                          \Components\stack\sys\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\zdo\" -I "S:\zigbee\Myzigbe\version #
#                           3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\ #
#                          AT commands\AT command 3.2\CC2530DB\..\..\..\..\.. #
#                          \Components\stack\zcl\" -I                         #
#                          "S:\zigbee\Myzigbe\version 3.0 for new             #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\zmac\" -I "S:\zigbee\Myzigbe\version 3.0  #
#                          for new ZStack-CC2530-2.5.1a\Projects\zstack\AT    #
#                          commands\AT command 3.2\CC2530DB\..\..\..\..\..\Co #
#                          mponents\zmac\f8w\" -Ohz --require_prototypes      #
#    List file          =  S:\zigbee\Myzigbe\version 3.0 for new              #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Lis #
#                          t\AT_App.lst                                       #
#    Object file        =  S:\zigbee\Myzigbe\version 3.0 for new              #
#                          ZStack-CC2530-2.5.1a\Projects\zstack\AT            #
#                          commands\AT command 3.2\CC2530DB\CoordinatorEB\Obj #
#                          \AT_App.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

S:\zigbee\Myzigbe\version 3.0 for new ZStack-CC2530-2.5.1a\Projects\zstack\AT commands\AT command 3.2\Source\AT_App.c
      1          /**************************************************************************************************
      2            Filename:       AT_App.c
      3          
      4            Description:    AT command module
      5            Author:         Xiao Wang
      6          **************************************************************************************************/
      7          #include "OSAL.h"
      8          #include "OSAL_NV.h"
      9          #include "ZGlobals.h"
     10          #include "AF.h"
     11          #include "aps_groups.h"
     12          #include "ZDApp.h"
     13          
     14          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc9
   \   unsigned char volatile __sfr WDCTL
   \                     WDCTL:
   \   000000                DS 1
     15          #include "ZDObject.h"
     16          
     17          #include "zcl.h"
     18          #include "AT_ONOFF_output.h"
     19          #include "AT_include.h"
     20          
     21          #include "AT_printf.h"
     22          
     23          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     24          uint8 AT_App_TaskID;   // Task ID for internal task/event processing
   \                     AT_App_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     25                                    // This variable will be received when
     26                                    // AT_App_Init() is called.
     27          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     28          epList_t *removedEPList = NULL;  
   \                     removedEPList:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     29          AT_App_Cmd_POWER_SAVING_EXP_t AT_App_Cmd_POWER_SAVING_EXP={0,0,0};
   \                     AT_App_Cmd_POWER_SAVING_EXP:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     30          /*********************************************************************
     31           * LOCAL FUNCTIONS
     32           *******************************************************************/
     33          
     34          uint8 AT_handleEntryEvt(void);
     35          void AT_handleZCL_EP(void);
     36          void AT_App_HandleKeys( uint8 shift, uint8 keys );
     37          static void AT_App_process_Power_Saving_Exp_Evt(void);
     38          
     39          //initialize this task after the ZCL initialization, I have encounter the mistake that I initialized
     40          //the task before the ZCL. this lead all the zcl layer work innormal.

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     41          void AT_App_Init(uint8 task_id ){
   \                     AT_App_Init:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     42            AT_App_TaskID=task_id;
   \   000007   90....       MOV     DPTR,#AT_App_TaskID
   \   00000A   F0           MOVX    @DPTR,A
     43            //ZDO_RegisterForZDOMsg( task_id, Device_annce );
     44            AT_ZDO_Register(&AT_App_TaskID);
   \   00000B                ; Setup parameters for call to function AT_ZDO_Register
   \   00000B   7A..         MOV     R2,#AT_App_TaskID & 0xff
   \   00000D   7B..         MOV     R3,#(AT_App_TaskID >> 8) & 0xff
   \   00000F   12....       LCALL   ??AT_ZDO_Register?relay
     45            
     46            AT_ONOFF_OUTPUT_Register(&AT_App_TaskID);
   \   000012                ; Setup parameters for call to function AT_ONOFF_OUTPUT_Register
   \   000012   7A..         MOV     R2,#AT_App_TaskID & 0xff
   \   000014   7B..         MOV     R3,#(AT_App_TaskID >> 8) & 0xff
   \   000016   12....       LCALL   ??AT_ONOFF_OUTPUT_Register?relay
     47            
     48            //register AT command AF layer application
     49            AT_AF_Register(&AT_App_TaskID);
   \   000019                ; Setup parameters for call to function AT_AF_Register
   \   000019   7A..         MOV     R2,#AT_App_TaskID & 0xff
   \   00001B   7B..         MOV     R3,#(AT_App_TaskID >> 8) & 0xff
   \   00001D   12....       LCALL   ??AT_AF_Register?relay
     50            
     51            
     52            // Register the Application to receive the unprocessed Foundation command/response messages
     53            zcl_registerForMsg(task_id);
   \   000020                ; Setup parameters for call to function zcl_registerForMsg
   \   000020   EE           MOV     A,R6
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??zcl_registerForMsg?relay
     54            //Initialize the AT ZCL to send AT ZCL command
     55            AT_ZCL_Init();
   \   000025                ; Setup parameters for call to function AT_ZCL_Init
   \   000025   12....       LCALL   ??AT_ZCL_Init?relay
     56            
     57            
     58            /*initialise AT_Uart*/
     59            AT_UartInit(task_id);
   \   000028                ; Setup parameters for call to function AT_UartInit
   \   000028   EE           MOV     A,R6
   \   000029   F9           MOV     R1,A
   \   00002A   12....       LCALL   ??AT_UartInit?relay
     60          
     61          #if AT_MSG_SEND_MODE
     62            AT_UartRegisterTaskID( task_id);
     63          #endif
     64            
     65          #if defined ( HOLD_AUTO_START )
     66            ZDOInitDevice(0);
   \   00002D                ; Setup parameters for call to function ZDOInitDevice
   \   00002D   7A00         MOV     R2,#0x0
   \   00002F   7B00         MOV     R3,#0x0
   \   000031   12....       LCALL   ??ZDOInitDevice?relay
     67          #endif
     68            
     69            // Register for all key events - This app will handle all key events
     70            HalKeyConfig (1, NULL);//enable interrupt
   \   000034                ; Setup parameters for call to function HalKeyConfig
   \   000034   7A00         MOV     R2,#0x0
   \   000036   7B00         MOV     R3,#0x0
   \   000038   7901         MOV     R1,#0x1
   \   00003A   12....       LCALL   ??HalKeyConfig?relay
     71            RegisterForKeys( task_id );
   \   00003D                ; Setup parameters for call to function RegisterForKeys
   \   00003D   EE           MOV     A,R6
   \   00003E   F9           MOV     R1,A
   \   00003F   12....       LCALL   ??RegisterForKeys?relay
     72            
     73            //NLME_PermitJoiningRequest(10);      //permit joining in 16 seconds 
     74            
     75            osal_set_event(task_id, AT_ENTRY_EVENT);
   \   000042                ; Setup parameters for call to function osal_set_event
   \   000042   7A00         MOV     R2,#0x0
   \   000044   7B40         MOV     R3,#0x40
   \   000046   EE           MOV     A,R6
   \   000047   F9           MOV     R1,A
   \   000048   12....       LCALL   ??osal_set_event?relay
     76          }
   \   00004B                REQUIRE ?Subroutine0
   \   00004B                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     77          
     78          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     79          uint16 AT_App_ProcessEvent( uint8 task_id, uint16 events ){
   \                     AT_App_ProcessEvent:
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     80            
     81            afIncomingMSGPacket_t *MSGpkt;
     82            (void)task_id;  // Intentionally unreferenced parameter
     83          
     84            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   7003         JNZ     $+5
   \   00000E   02....       LJMP    ??AT_App_ProcessEvent_0 & 0xFFFF
     85            {
     86              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( AT_App_TaskID );
   \   000011                ; Setup parameters for call to function osal_msg_receive
   \   000011   8017         SJMP    ??AT_App_ProcessEvent_1
     87              while ( MSGpkt )
     88              {
     89                switch ( MSGpkt->hdr.event )
     90                {
     91                  // Received when a messages is received (OTA) for this endpoint
     92                  case AF_INCOMING_MSG_CMD:
     93                    switch(MSGpkt->endPoint)
     94                    {
     95                      case AT_ONOFF_OUTPUT_ENDPOINT:
     96                        AT_ONOFF_OUTPUT_MessageMSGCB( MSGpkt );
     97                        break;
     98                      case AT_AF_ENDPOINT:
     99                        AT_AF_MessageMSGCB( MSGpkt );
    100                        break;
    101                        
    102                      default:
    103                        break;
    104                    }
    105                    break;
    106                    
    107                  case ZCL_INCOMING_MSG:
    108                    // Incoming ZCL Foundation command/response messages
    109                    AT_ZCL_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt );
    110                    break;
    111                    
    112                    
    113                  // Received whenever the device changes state in the network
    114                  case ZDO_STATE_CHANGE:
    115                    break;
    116          #if AT_MSG_SEND_MODE
    117                  case AT_CMD_MSG:
    118                    //HalUARTWrite ( 0, " received \n", sizeof(" received \n") );
    119                    AT_HandleCMD(((atOSALSerialData_t*) MSGpkt)->msg);
    120                   break;
    121          #endif
    122                  case ZDO_CB_MSG:
    123                      AT_ZDO_ProcessMsgCBs( (zdoIncomingMsg_t *)MSGpkt );
    124                    break;
    125                    
    126                  // Received when a key is pressed
    127                  case KEY_CHANGE:
    128                    AT_App_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
   \                     ??AT_App_ProcessEvent_2:
   \   000013                ; Setup parameters for call to function AT_App_HandleKeys
   \   000013   A3           INC     DPTR
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   FA           MOV     R2,A
   \   000018   8E82         MOV     DPL,R6
   \   00001A   8F83         MOV     DPH,R7
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F9           MOV     R1,A
   \   000020   12....       LCALL   ??AT_App_HandleKeys?relay
    129                    break;
    130                }
    131          
    132                // Release the memory
    133                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??AT_App_ProcessEvent_3:
   \   000023                ; Setup parameters for call to function osal_msg_deallocate
   \   000023   EE           MOV     A,R6
   \   000024   FA           MOV     R2,A
   \   000025   EF           MOV     A,R7
   \   000026   FB           MOV     R3,A
   \   000027   12....       LCALL   ??osal_msg_deallocate?relay
    134          
    135                // Next - if one is available
    136                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( AT_App_TaskID );
   \   00002A                ; Setup parameters for call to function osal_msg_receive
   \                     ??AT_App_ProcessEvent_1:
   \   00002A   90....       MOV     DPTR,#AT_App_TaskID
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??osal_msg_receive?relay
   \   000032   8A..         MOV     ?V0 + 2,R2
   \   000034   8B..         MOV     ?V0 + 3,R3
   \   000036   AE..         MOV     R6,?V0 + 2
   \   000038   AF..         MOV     R7,?V0 + 3
   \   00003A   EE           MOV     A,R6
   \   00003B   4F           ORL     A,R7
   \   00003C   6050         JZ      ??AT_App_ProcessEvent_4
   \   00003E   8E82         MOV     DPL,R6
   \   000040   8F83         MOV     DPH,R7
   \   000042   E0           MOVX    A,@DPTR
   \   000043   24E6         ADD     A,#-0x1a
   \   000045   600E         JZ      ??AT_App_ProcessEvent_5
   \   000047   24E6         ADD     A,#-0x1a
   \   000049   6031         JZ      ??AT_App_ProcessEvent_6
   \   00004B   2474         ADD     A,#0x74
   \   00004D   60C4         JZ      ??AT_App_ProcessEvent_2
   \   00004F   24ED         ADD     A,#-0x13
   \   000051   6032         JZ      ??AT_App_ProcessEvent_7
   \   000053   80CE         SJMP    ??AT_App_ProcessEvent_3
   \                     ??AT_App_ProcessEvent_5:
   \   000055   EE           MOV     A,R6
   \   000056   2414         ADD     A,#0x14
   \   000058   F582         MOV     DPL,A
   \   00005A   EF           MOV     A,R7
   \   00005B   3400         ADDC    A,#0x0
   \   00005D   F583         MOV     DPH,A
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   2437         ADD     A,#0x37
   \   000062   6006         JZ      ??AT_App_ProcessEvent_8
   \   000064   24FD         ADD     A,#-0x3
   \   000066   600B         JZ      ??AT_App_ProcessEvent_9
   \   000068   80B9         SJMP    ??AT_App_ProcessEvent_3
   \                     ??AT_App_ProcessEvent_8:
   \   00006A                ; Setup parameters for call to function AT_ONOFF_OUTPUT_MessageMSGCB
   \   00006A   EE           MOV     A,R6
   \   00006B   FA           MOV     R2,A
   \   00006C   EF           MOV     A,R7
   \   00006D   FB           MOV     R3,A
   \   00006E   12....       LCALL   ??AT_ONOFF_OUTPUT_MessageMSGCB?relay
   \   000071   80B0         SJMP    ??AT_App_ProcessEvent_3
   \                     ??AT_App_ProcessEvent_9:
   \   000073                ; Setup parameters for call to function AT_AF_MessageMSGCB
   \   000073   EE           MOV     A,R6
   \   000074   FA           MOV     R2,A
   \   000075   EF           MOV     A,R7
   \   000076   FB           MOV     R3,A
   \   000077   12....       LCALL   ??AT_AF_MessageMSGCB?relay
   \   00007A   80A7         SJMP    ??AT_App_ProcessEvent_3
   \                     ??AT_App_ProcessEvent_6:
   \   00007C                ; Setup parameters for call to function AT_ZCL_ProcessIncomingMsg
   \   00007C   EE           MOV     A,R6
   \   00007D   FA           MOV     R2,A
   \   00007E   EF           MOV     A,R7
   \   00007F   FB           MOV     R3,A
   \   000080   12....       LCALL   ??AT_ZCL_ProcessIncomingMsg?relay
   \   000083   809E         SJMP    ??AT_App_ProcessEvent_3
   \                     ??AT_App_ProcessEvent_7:
   \   000085                ; Setup parameters for call to function AT_ZDO_ProcessMsgCBs
   \   000085   EE           MOV     A,R6
   \   000086   FA           MOV     R2,A
   \   000087   EF           MOV     A,R7
   \   000088   FB           MOV     R3,A
   \   000089   12....       LCALL   ??AT_ZDO_ProcessMsgCBs?relay
   \   00008C   8095         SJMP    ??AT_App_ProcessEvent_3
    137              }
    138          
    139              // return unprocessed events
    140              return (events ^ SYS_EVENT_MSG);
   \                     ??AT_App_ProcessEvent_4:
   \   00008E   AA..         MOV     R2,?V0 + 0
   \   000090   E5..         MOV     A,?V0 + 1
   \   000092   6480         XRL     A,#0x80
   \                     ??AT_App_ProcessEvent_10:
   \   000094   FB           MOV     R3,A
   \   000095   8038         SJMP    ??AT_App_ProcessEvent_11
    141            }
    142            else if( events & AT_ENTRY_EVENT){
   \                     ??AT_App_ProcessEvent_0:
   \   000097   EB           MOV     A,R3
   \   000098   5440         ANL     A,#0x40
   \   00009A   600E         JZ      ??AT_App_ProcessEvent_12
    143              AT_handleZCL_EP();
   \   00009C                ; Setup parameters for call to function AT_handleZCL_EP
   \   00009C   12....       LCALL   ??AT_handleZCL_EP?relay
    144              AT_handleEntryEvt();
   \   00009F                ; Setup parameters for call to function AT_handleEntryEvt
   \   00009F   12....       LCALL   ??AT_handleEntryEvt?relay
    145              return (events ^ AT_ENTRY_EVENT);
   \   0000A2   AA..         MOV     R2,?V0 + 0
   \   0000A4   E5..         MOV     A,?V0 + 1
   \   0000A6   6440         XRL     A,#0x40
   \   0000A8   80EA         SJMP    ??AT_App_ProcessEvent_10
    146            }
    147            else if( events & AT_POWER_SAVING_EXP_EVENT){
   \                     ??AT_App_ProcessEvent_12:
   \   0000AA   EB           MOV     A,R3
   \   0000AB   5410         ANL     A,#0x10
   \   0000AD   600B         JZ      ??AT_App_ProcessEvent_13
    148              AT_App_process_Power_Saving_Exp_Evt();
   \   0000AF                ; Setup parameters for call to function AT_App_process_Power_Saving_Exp_Evt
   \   0000AF   12....       LCALL   ??AT_App_process_Power_Saving_Exp_Evt?relay
    149              return (events ^ AT_POWER_SAVING_EXP_EVENT);
   \   0000B2   AA..         MOV     R2,?V0 + 0
   \   0000B4   E5..         MOV     A,?V0 + 1
   \   0000B6   6410         XRL     A,#0x10
   \   0000B8   80DA         SJMP    ??AT_App_ProcessEvent_10
    150            }else if( events & AT_RESET_EVENT ){
   \                     ??AT_App_ProcessEvent_13:
   \   0000BA   EB           MOV     A,R3
   \   0000BB   5420         ANL     A,#0x20
   \   0000BD   600C         JZ      ??AT_App_ProcessEvent_14
    151              SystemReset(); 
   \   0000BF   C2AF         CLR     0xa8.7
   \   0000C1   C2AF         CLR     0xa8.7
   \   0000C3   75C9AB       MOV     0xc9,#-0x55
   \   0000C6   75C95B       MOV     0xc9,#0x5b
   \                     ??AT_App_ProcessEvent_15:
   \   0000C9   80FE         SJMP    ??AT_App_ProcessEvent_15
    152            }
    153          
    154            // Discard unknown events
    155            return 0;
   \                     ??AT_App_ProcessEvent_14:
   \   0000CB   7A00         MOV     R2,#0x0
   \   0000CD   7B00         MOV     R3,#0x0
   \                     ??AT_App_ProcessEvent_11:
   \   0000CF   7F04         MOV     R7,#0x4
   \   0000D1   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000D4                REQUIRE _A_IEN0
   \   0000D4                REQUIRE WDCTL
    156          }
    157          
    158          /*********************************************************
    159          when the device just starts, this function will remove end point from AF layer, according 
    160          to NV record.
    161          ***************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    162          void AT_handleZCL_EP(void){
   \                     AT_handleZCL_EP:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 6
   \   000005   74FA         MOV     A,#-0x6
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    163            const uint8 AT_CMD_EP_ARRAY[]=AT_CMD_EPs;
   \   00000A   7401         MOV     A,#0x1
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   AC82         MOV     R4,DPL
   \   000011   AD83         MOV     R5,DPH
   \   000013   7583..       MOV     DPH,#(`?<Constant {1, 4, 5, 6, 7}>` >> 8) & 0xff
   \   000016   7582..       MOV     DPL,#`?<Constant {1, 4, 5, 6, 7}>` & 0xff
   \   000019   7405         MOV     A,#0x5
   \   00001B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    164            uint8 i;
    165            uint8 enable;
    166            for(i=0;i<sizeof(AT_CMD_EP_ARRAY);i++){
   \   00001E   FF           MOV     R7,A
    167              //read ZCL NV
    168              AT_NV_ZCL_readEPStatus(i,&enable);
   \                     ??AT_handleZCL_EP_0:
   \   00001F                ; Setup parameters for call to function AT_NV_ZCL_readEPStatus
   \   00001F   85..82       MOV     DPL,?XSP + 0
   \   000022   85..83       MOV     DPH,?XSP + 1
   \   000025   AA82         MOV     R2,DPL
   \   000027   AB83         MOV     R3,DPH
   \   000029   EF           MOV     A,R7
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??AT_NV_ZCL_readEPStatus?relay
    169              //if the NV indicate the enpoint is not enable, remove it
    170              if(enable == 1) {
   \   00002E   85..82       MOV     DPL,?XSP + 0
   \   000031   85..83       MOV     DPH,?XSP + 1
   \   000034   E0           MOVX    A,@DPTR
   \   000035   6401         XRL     A,#0x1
   \   000037   8F..         MOV     ?V0 + 0,R7
   \   000039   700D         JNZ     ??AT_handleZCL_EP_1
    171                
    172                //enable the ZCL layer
    173                AT_ZCL_EP_ENABLE( 1,AT_CMD_EP_ARRAY[i]);
   \   00003B                ; Setup parameters for call to function AT_ZCL_EP_ENABLE
   \   00003B   7401         MOV     A,#0x1
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   12....       LCALL   ?Subroutine17 & 0xFFFF
    174              }else{
   \                     ??CrossCallReturnLabel_28:
   \   000043   FA           MOV     R2,A
   \   000044   7901         MOV     R1,#0x1
   \   000046   8011         SJMP    ??AT_handleZCL_EP_2
    175                AT_af_remove_ep(AT_CMD_EP_ARRAY[i]);
   \                     ??AT_handleZCL_EP_1:
   \   000048   7401         MOV     A,#0x1
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000050   FE           MOV     R6,A
   \   000051                ; Setup parameters for call to function AT_af_remove_ep
   \   000051   F9           MOV     R1,A
   \   000052   12....       LCALL   ??AT_af_remove_ep?relay
    176                //enable the ZCL layer
    177                AT_ZCL_EP_ENABLE( 0,AT_CMD_EP_ARRAY[i]);
   \   000055                ; Setup parameters for call to function AT_ZCL_EP_ENABLE
   \   000055   EE           MOV     A,R6
   \   000056   FA           MOV     R2,A
   \   000057   7900         MOV     R1,#0x0
   \                     ??AT_handleZCL_EP_2:
   \   000059   12....       LCALL   ??AT_ZCL_EP_ENABLE?relay
    178              }
    179            }
   \   00005C   0F           INC     R7
   \   00005D   EF           MOV     A,R7
   \   00005E   C3           CLR     C
   \   00005F   9405         SUBB    A,#0x5
   \   000061   40BC         JC      ??AT_handleZCL_EP_0
    180          }
   \   000063   7406         MOV     A,#0x6
   \   000065   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   E582         MOV     A,DPL
   \   000002   25..         ADD     A,?V0 + 0
   \   000004   F582         MOV     DPL,A
   \   000006   E583         MOV     A,DPH
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F583         MOV     DPH,A
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine21_0
   \   000003                ; // Fall through to label ??Subroutine21_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine21_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    181          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    182          uint8 AT_handleEntryEvt(void){
   \                     AT_handleEntryEvt:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 1
   \   000005   74FF         MOV     A,#-0x1
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    183            
    184            //zgWriteStartupOptions( ZG_STARTUP_CLEAR, ZCD_STARTOPT_DEFAULT_NETWORK_STATE );
    185            uint8 status;
    186            uint8 startupOptions = 0;
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   E4           CLR     A
   \   000011   12....       LCALL   ?Subroutine4 & 0xFFFF
    187            
    188            status = osal_nv_read( ZCD_NV_STARTUP_OPTION,
    189                          0,
    190                          sizeof( startupOptions ),
    191                          &startupOptions );
   \                     ??CrossCallReturnLabel_2:
   \   000014   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000017   75..01       MOV     ?V0 + 0,#0x1
   \   00001A   75..00       MOV     ?V0 + 1,#0x0
   \   00001D   78..         MOV     R0,#?V0 + 0
   \   00001F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000022   7C00         MOV     R4,#0x0
   \   000024   7D00         MOV     R5,#0x0
   \   000026   7A03         MOV     R2,#0x3
   \   000028   7B00         MOV     R3,#0x0
   \   00002A   12....       LCALL   ??osal_nv_read?relay
   \   00002D   7404         MOV     A,#0x4
   \   00002F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000032   E9           MOV     A,R1
    192          
    193            if ( status == ZSUCCESS )
   \   000033   702F         JNZ     ??AT_handleEntryEvt_0
    194            {
    195              
    196              if(startupOptions & (ZCD_STARTOPT_DEFAULT_NETWORK_STATE|ZCD_STARTOPT_DEFAULT_CONFIG_STATE)  ){
   \   000035   85..82       MOV     DPL,?XSP + 0
   \   000038   85..83       MOV     DPH,?XSP + 1
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   5403         ANL     A,#0x3
   \   00003E   6024         JZ      ??AT_handleEntryEvt_0
    197                
    198                startupOptions &= (~(ZCD_STARTOPT_DEFAULT_NETWORK_STATE|ZCD_STARTOPT_DEFAULT_CONFIG_STATE));
   \   000040   E0           MOVX    A,@DPTR
   \   000041   54FC         ANL     A,#0xfc
   \   000043   12....       LCALL   ?Subroutine4 & 0xFFFF
    199                status = osal_nv_write( ZCD_NV_STARTUP_OPTION,
    200                           0,
    201                           sizeof( startupOptions ),
    202                           &startupOptions );
    203               }
    204             }
   \                     ??CrossCallReturnLabel_3:
   \   000046   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000049   75..01       MOV     ?V0 + 0,#0x1
   \   00004C   75..00       MOV     ?V0 + 1,#0x0
   \   00004F   78..         MOV     R0,#?V0 + 0
   \   000051   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000054   7C00         MOV     R4,#0x0
   \   000056   7D00         MOV     R5,#0x0
   \   000058   7A03         MOV     R2,#0x3
   \   00005A   7B00         MOV     R3,#0x0
   \   00005C   12....       LCALL   ??osal_nv_write?relay
   \   00005F   7404         MOV     A,#0x4
   \   000061   12....       LCALL   ?DEALLOC_XSTACK8
    205             return status;
   \                     ??AT_handleEntryEvt_0:
   \   000064   7401         MOV     A,#0x1
   \   000066   80..         SJMP    ?Subroutine1
    206          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function osal_nv_read
   \   000001                ; Setup parameters for call to function osal_nv_write
   \   000001   8582..       MOV     ?V0 + 0,DPL
   \   000004   8583..       MOV     ?V0 + 1,DPH
   \   000007   78..         MOV     R0,#?V0 + 0
   \   000009   22           RET
    207          
    208          /********************************************************
    209          Handles all key events for this device.
    210          *******************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    211          void AT_App_HandleKeys( uint8 shift, uint8 keys ){
   \                     AT_App_HandleKeys:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
    212            if ( (~keys) & HAL_KEY_SW_1 )
   \   00000B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00000D   4063         JC      ??AT_App_HandleKeys_0
    213            {
    214              
    215              //build broadcast address
    216              afAddrType_t AT_AF_broad_addr={
    217                {AT_AF_GROUP_ID},                       //addr
    218                (afAddrMode_t)AddrGroup,              //addr mode
    219                AT_AF_ENDPOINT,                         //end point
    220                NULL                                    //PAN ID
    221              };
   \   00000F   85..82       MOV     DPL,?XSP + 0
   \   000012   85..83       MOV     DPH,?XSP + 1
   \   000015   AC82         MOV     R4,DPL
   \   000017   AD83         MOV     R5,DPH
   \   000019   7583..       MOV     DPH,#(`?<Constant {{32768}, 1, 204, 0}>` >> 8) & 0xff
   \   00001C   7582..       MOV     DPL,#`?<Constant {{32768}, 1, 204, 0}>` & 0xff
   \   00001F   740C         MOV     A,#0xc
   \   000021   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    222              AF_DataRequest( &AT_AF_broad_addr, &AT_AF_epDesc,
    223                                 AT_AF_TEST_KEY_CLUSTERID,
    224                                 0,
    225                                 0,
    226                                 &AT_AF_TransID,
    227                                 AF_DISCV_ROUTE,
    228                                 AF_DEFAULT_RADIUS );
   \   000024                ; Setup parameters for call to function AF_DataRequest
   \   000024   75..1E       MOV     ?V0 + 0,#0x1e
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   75....       MOV     ?V0 + 0,#AT_AF_TransID & 0xff
   \   00002F   75....       MOV     ?V0 + 1,#(AT_AF_TransID >> 8) & 0xff
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   E4           CLR     A
   \   000038   F5..         MOV     ?V0 + 0,A
   \   00003A   F5..         MOV     ?V0 + 1,A
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000046   75..05       MOV     ?V0 + 0,#0x5
   \   000049   78..         MOV     R0,#?V0 + 0
   \   00004B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004E   7920         MOV     R1,#0x20
   \   000050   7C..         MOV     R4,#AT_AF_epDesc & 0xff
   \   000052   7D..         MOV     R5,#(AT_AF_epDesc >> 8) & 0xff
   \   000054   7409         MOV     A,#0x9
   \   000056   12....       LCALL   ?XSTACK_DISP0_8
   \   000059   AA82         MOV     R2,DPL
   \   00005B   AB83         MOV     R3,DPH
   \   00005D   12....       LCALL   ??AF_DataRequest?relay
   \   000060   7409         MOV     A,#0x9
   \   000062   12....       LCALL   ?DEALLOC_XSTACK8
    229              
    230              HalLedBlink( HAL_LED_2, 4, 50, 250 );
   \   000065                ; Setup parameters for call to function HalLedBlink
   \   000065   7CFA         MOV     R4,#-0x6
   \   000067   7D00         MOV     R5,#0x0
   \   000069   7B32         MOV     R3,#0x32
   \   00006B   7A04         MOV     R2,#0x4
   \   00006D   7902         MOV     R1,#0x2
   \   00006F   12....       LCALL   ??HalLedBlink?relay
    231            }
    232          }
   \                     ??AT_App_HandleKeys_0:
   \   000072   740C         MOV     A,#0xc
   \   000074                REQUIRE ?Subroutine1
   \   000074                ; // Fall through to label ?Subroutine1
    233          
    234          /*******************************************************
    235          the reverse proces of afRegister() function
    236          ********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    237          afStatus_t AT_af_remove_ep(uint8 EndPoint){
   \                     AT_af_remove_ep:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    238            
    239            
    240            epList_t *epSearchpre;
    241            epList_t *epSearchcur;
    242          
    243            //endPoint range:(1-240)
    244            if(EndPoint<1 || EndPoint>240 ) return ( afStatus_INVALID_PARAMETER);
   \   000007   74FF         MOV     A,#-0x1
   \   000009   2E           ADD     A,R6
   \   00000A   C3           CLR     C
   \   00000B   94F0         SUBB    A,#-0x10
   \   00000D   4004         JC      ??AT_af_remove_ep_0
   \                     ??AT_af_remove_ep_1:
   \   00000F   7902         MOV     R1,#0x2
   \   000011   803C         SJMP    ??AT_af_remove_ep_2
    245            
    246            // Start at the beginning
    247            epSearchcur = epList;
   \                     ??AT_af_remove_ep_0:
   \   000013   90....       MOV     DPTR,#epList
   \   000016   12....       LCALL   ?Subroutine15 & 0xFFFF
    248            epSearchpre = NULL;
   \                     ??CrossCallReturnLabel_26:
   \   000019   8003         SJMP    ??CrossCallReturnLabel_36
    249          
    250            // Look through the list until the end
    251            while ( epSearchcur )
    252            {
    253              // Is there a match?
    254              if ( epSearchcur->epDesc->endPoint == EndPoint )
    255              {
    256                //the enpoint is found
    257                //delete the epSearchcur
    258                if(epSearchpre==NULL)//check whether the aim is the first one
    259                    epList = epSearchcur->nextDesc;
    260                else epSearchpre->nextDesc = epSearchcur->nextDesc;
    261                
    262                epSearchcur->nextDesc=removedEPList;
    263                removedEPList = epSearchcur;
    264                //osal_mem_free(epSearchcur);
    265                return afStatus_SUCCESS;
    266              }
    267              else
    268                
    269                epSearchpre = epSearchcur;
   \                     ??AT_af_remove_ep_3:
   \   00001B   12....       LCALL   ?Subroutine16 & 0xFFFF
    270                epSearchcur = epSearchcur->nextDesc;  // Next entry
   \                     ??CrossCallReturnLabel_36:
   \   00001E   E8           MOV     A,R0
   \   00001F   49           ORL     A,R1
   \   000020   60ED         JZ      ??AT_af_remove_ep_1
   \   000022   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000025   70F4         JNZ     ??AT_af_remove_ep_3
   \   000027   EA           MOV     A,R2
   \   000028   4B           ORL     A,R3
   \   000029   8882         MOV     DPL,R0
   \   00002B   8983         MOV     DPH,R1
   \   00002D   700C         JNZ     ??AT_af_remove_ep_4
   \   00002F   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000032   90....       MOV     DPTR,#epList
   \   000035   EA           MOV     A,R2
   \   000036   F0           MOVX    @DPTR,A
   \   000037   A3           INC     DPTR
   \   000038   EB           MOV     A,R3
   \   000039   8003         SJMP    ??CrossCallReturnLabel_10
   \                     ??AT_af_remove_ep_4:
   \   00003B   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   00003E   F0           MOVX    @DPTR,A
   \   00003F   90....       MOV     DPTR,#removedEPList
   \   000042   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000045   90....       MOV     DPTR,#removedEPList
   \   000048   E8           MOV     A,R0
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
   \   00004B   E9           MOV     A,R1
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   7900         MOV     R1,#0x0
    271            }
   \                     ??AT_af_remove_ep_2:
   \   00004F   02....       LJMP    ?Subroutine0 & 0xFFFF
    272            return ( afStatus_INVALID_PARAMETER);
    273          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   E8           MOV     A,R0
   \   000001   FA           MOV     R2,A
   \   000002   E9           MOV     A,R1
   \   000003   FB           MOV     R3,A
   \   000004   8882         MOV     DPL,R0
   \   000006   8983         MOV     DPH,R1
   \   000008                REQUIRE ??Subroutine22_0
   \   000008                ; // Fall through to label ??Subroutine22_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine22_0:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7B00         MOV     R3,#0x0
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   E0           MOVX    A,@DPTR
   \   000007   FC           MOV     R4,A
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F583         MOV     DPH,A
   \   00000C   8C82         MOV     DPL,R4
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   6E           XRL     A,R6
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   EC           MOV     A,R4
   \   00000A   F0           MOVX    @DPTR,A
   \   00000B   A3           INC     DPTR
   \   00000C   ED           MOV     A,R5
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   000003   8882         MOV     DPL,R0
   \   000005   8983         MOV     DPH,R1
   \   000007   EA           MOV     A,R2
   \   000008   F0           MOVX    @DPTR,A
   \   000009   A3           INC     DPTR
   \   00000A   EB           MOV     A,R3
   \   00000B   F0           MOVX    @DPTR,A
   \   00000C   22           RET
    274          
    275          /*******************************************************
    276          the afRegister() function for register an endpoint with provided endpoint
    277          ********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    278          afStatus_t AT_af_register_ep(uint8 EndPoint){
   \                     AT_af_register_ep:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    279            
    280            
    281            epList_t *epSearchpre;
    282            epList_t *epSearchcur;
    283            //endPoint range:(1-240)
    284            if(EndPoint<1 || EndPoint>240 ) return ( afStatus_INVALID_PARAMETER);
   \   000007   74FF         MOV     A,#-0x1
   \   000009   2E           ADD     A,R6
   \   00000A   C3           CLR     C
   \   00000B   94F0         SUBB    A,#-0x10
   \   00000D   4004         JC      ??AT_af_register_ep_0
   \                     ??AT_af_register_ep_1:
   \   00000F   7902         MOV     R1,#0x2
   \   000011   803C         SJMP    ??AT_af_register_ep_2
    285            
    286            // Start at the beginning
    287            epSearchcur = removedEPList;
   \                     ??AT_af_register_ep_0:
   \   000013   90....       MOV     DPTR,#removedEPList
   \   000016   12....       LCALL   ?Subroutine15 & 0xFFFF
    288            epSearchpre = NULL;
   \                     ??CrossCallReturnLabel_27:
   \   000019   8003         SJMP    ??CrossCallReturnLabel_37
    289            
    290            // Look through the list until the end
    291            while ( epSearchcur )
    292            {
    293              // Is there a match?
    294              if ( epSearchcur->epDesc->endPoint == EndPoint )
    295              {
    296                //the enpoint is found
    297                //delete the epSearchcur
    298                if(epSearchpre==NULL)//check whether the aim is the first one
    299                    removedEPList = epSearchcur->nextDesc;
    300                else epSearchpre->nextDesc = epSearchcur->nextDesc;
    301                
    302                epSearchcur->nextDesc=epList;
    303                epList = epSearchcur;
    304                
    305                //osal_mem_free(epSearchcur);
    306                return afStatus_SUCCESS;
    307              }
    308              else
    309                
    310                epSearchpre = epSearchcur;
   \                     ??AT_af_register_ep_3:
   \   00001B   12....       LCALL   ?Subroutine16 & 0xFFFF
    311                epSearchcur = epSearchcur->nextDesc;  // Next entry
   \                     ??CrossCallReturnLabel_37:
   \   00001E   E8           MOV     A,R0
   \   00001F   49           ORL     A,R1
   \   000020   60ED         JZ      ??AT_af_register_ep_1
   \   000022   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000025   70F4         JNZ     ??AT_af_register_ep_3
   \   000027   EA           MOV     A,R2
   \   000028   4B           ORL     A,R3
   \   000029   8882         MOV     DPL,R0
   \   00002B   8983         MOV     DPH,R1
   \   00002D   700C         JNZ     ??AT_af_register_ep_4
   \   00002F   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000032   90....       MOV     DPTR,#removedEPList
   \   000035   EA           MOV     A,R2
   \   000036   F0           MOVX    @DPTR,A
   \   000037   A3           INC     DPTR
   \   000038   EB           MOV     A,R3
   \   000039   8003         SJMP    ??CrossCallReturnLabel_11
   \                     ??AT_af_register_ep_4:
   \   00003B   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   00003E   F0           MOVX    @DPTR,A
   \   00003F   90....       MOV     DPTR,#epList
   \   000042   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000045   90....       MOV     DPTR,#epList
   \   000048   E8           MOV     A,R0
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
   \   00004B   E9           MOV     A,R1
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   7900         MOV     R1,#0x0
    312            }
   \                     ??AT_af_register_ep_2:
   \   00004F   02....       LJMP    ?Subroutine0 & 0xFFFF
    313            return ( afStatus_INVALID_PARAMETER);
    314          }
    315          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    316          epList_t* AT_af_get_ep(uint8 EndPoint){
   \                     AT_af_get_ep:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    317            
    318            epList_t *epSearch;
    319            // Start at the beginning
    320            epSearch = removedEPList;
   \   000004   90....       MOV     DPTR,#removedEPList
   \   000007   8004         SJMP    ??AT_af_get_ep_0
    321            // Look through the list until the end
    322            while ( epSearch )
    323            {
    324              // Is there a match?
    325              if ( epSearch->epDesc->endPoint == EndPoint )
    326              {
    327                return epSearch;
    328              }
    329              else
    330                epSearch = epSearch->nextDesc;  // Next entry
   \                     ??AT_af_get_ep_1:
   \   000009   8A82         MOV     DPL,R2
   \   00000B   8B83         MOV     DPH,R3
   \                     ??AT_af_get_ep_0:
   \   00000D   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000010   EA           MOV     A,R2
   \   000011   4B           ORL     A,R3
   \   000012   6007         JZ      ??AT_af_get_ep_2
   \   000014   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   000017   70F0         JNZ     ??AT_af_get_ep_1
   \   000019   8019         SJMP    ??AT_af_get_ep_3
    331            }
    332            epSearch = epList;
   \                     ??AT_af_get_ep_2:
   \   00001B   90....       MOV     DPTR,#epList
   \   00001E   8009         SJMP    ??AT_af_get_ep_4
    333            // Look through the list until the end
    334            while ( epSearch )
    335            {
    336              // Is there a match?
    337              if ( epSearch->epDesc->endPoint == EndPoint )
   \                     ??AT_af_get_ep_5:
   \   000020   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000023   600F         JZ      ??AT_af_get_ep_3
    338              {
    339                return epSearch;
    340              }
    341              else
    342                epSearch = epSearch->nextDesc;  // Next entry
   \   000025   8A82         MOV     DPL,R2
   \   000027   8B83         MOV     DPH,R3
    343            }
   \                     ??AT_af_get_ep_4:
   \   000029   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   00002C   EA           MOV     A,R2
   \   00002D   4B           ORL     A,R3
   \   00002E   70F0         JNZ     ??AT_af_get_ep_5
    344          
    345            return false;
   \   000030   7A00         MOV     R2,#0x0
   \   000032   7B00         MOV     R3,#0x0
   \                     ??AT_af_get_ep_3:
   \   000034   02....       LJMP    ?Subroutine2 & 0xFFFF
    346          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   8A82         MOV     DPL,R2
   \   000002   8B83         MOV     DPH,R3
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   E0           MOVX    A,@DPTR
   \   000007   F8           MOV     R0,A
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F583         MOV     DPH,A
   \   00000C   8882         MOV     DPL,R0
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   69           XRL     A,R1
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    347          
    348          
    349          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    350          uint8 AT_af_ep_num( void ){
   \                     AT_af_ep_num:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    351            epList_t *epSearch;
    352            uint8 cnt=0;
   \   000004   7900         MOV     R1,#0x0
    353            // Start at the beginning
    354            epSearch = removedEPList;
   \   000006   90....       MOV     DPTR,#removedEPList
   \   000009   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   00000C   8004         SJMP    ??AT_af_ep_num_0
    355            // Look through the list until the end
    356            while ( epSearch )
    357            {
    358                epSearch = epSearch->nextDesc;  // Next entry
   \                     ??AT_af_ep_num_1:
   \   00000E   12....       LCALL   ?Subroutine10 & 0xFFFF
    359                cnt++;
   \                     ??CrossCallReturnLabel_13:
   \   000011   09           INC     R1
    360            }
   \                     ??AT_af_ep_num_0:
   \   000012   E582         MOV     A,DPL
   \   000014   4583         ORL     A,DPH
   \   000016   70F6         JNZ     ??AT_af_ep_num_1
    361            epSearch = epList;
   \   000018   90....       MOV     DPTR,#epList
   \   00001B   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00001E   8004         SJMP    ??AT_af_ep_num_2
    362            // Look through the list until the end
    363            while ( epSearch )
    364            {
    365                epSearch = epSearch->nextDesc;  // Next entry
   \                     ??AT_af_ep_num_3:
   \   000020   12....       LCALL   ?Subroutine10 & 0xFFFF
    366                cnt++;
   \                     ??CrossCallReturnLabel_15:
   \   000023   09           INC     R1
    367            }
   \                     ??AT_af_ep_num_2:
   \   000024   E582         MOV     A,DPL
   \   000026   4583         ORL     A,DPH
   \   000028   70F6         JNZ     ??AT_af_ep_num_3
    368          
    369            return cnt;
   \   00002A   02....       LJMP    ?Subroutine2 & 0xFFFF
    370            
    371          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   000003   8A82         MOV     DPL,R2
   \   000005   8B83         MOV     DPH,R3
   \   000007   22           RET
    372          
    373          /********************************************************************
    374          give all endpoint, indcluding deleted endpoint by AT_af_remove_ep;
    375          *************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    376          void AT_af_ep_list( uint8 len, uint8 *list ){
   \                     AT_af_ep_list:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    377            epList_t *epSearch;
    378            uint8 cnt=0;
   \   000005   7C00         MOV     R4,#0x0
    379            // Start at the beginning
    380            epSearch = removedEPList;
   \   000007   90....       MOV     DPTR,#removedEPList
   \   00000A   12....       LCALL   ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   00000D   800C         SJMP    ??AT_af_ep_list_0
    381            // Look through the list until the end
    382            while ( epSearch )
    383            {
    384                epSearch = epSearch->nextDesc;  // Next entry
   \                     ??AT_af_ep_list_1:
   \   00000F   12....       LCALL   ?Subroutine6 & 0xFFFF
    385                list[cnt] = epSearch->epDesc->endPoint;
   \                     ??CrossCallReturnLabel_6:
   \   000012   C0E0         PUSH    A
   \   000014   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000017   D0E0         POP     A
   \   000019   F0           MOVX    @DPTR,A
    386                cnt++;
   \   00001A   0C           INC     R4
    387            }
   \                     ??AT_af_ep_list_0:
   \   00001B   E8           MOV     A,R0
   \   00001C   49           ORL     A,R1
   \   00001D   70F0         JNZ     ??AT_af_ep_list_1
    388            epSearch = epList;
   \   00001F   90....       MOV     DPTR,#epList
   \   000022   12....       LCALL   ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   000025   800C         SJMP    ??AT_af_ep_list_2
    389            // Look through the list until the end
    390            while ( epSearch )
    391            {
    392                epSearch = epSearch->nextDesc;  // Next entry
   \                     ??AT_af_ep_list_3:
   \   000027   12....       LCALL   ?Subroutine6 & 0xFFFF
    393                list[cnt] = epSearch->epDesc->endPoint;
   \                     ??CrossCallReturnLabel_7:
   \   00002A   C0E0         PUSH    A
   \   00002C   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   00002F   D0E0         POP     A
   \   000031   F0           MOVX    @DPTR,A
    394                cnt++;
   \   000032   0C           INC     R4
    395            }
   \                     ??AT_af_ep_list_2:
   \   000033   E8           MOV     A,R0
   \   000034   49           ORL     A,R1
   \   000035   70F0         JNZ     ??AT_af_ep_list_3
    396          }
   \   000037   02....       LJMP    ??Subroutine21_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   8C..         MOV     ?V0 + 0,R4
   \   000002   EA           MOV     A,R2
   \   000003   25..         ADD     A,?V0 + 0
   \   000005   F582         MOV     DPL,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F583         MOV     DPH,A
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   000007   8882         MOV     DPL,R0
   \   000009   8983         MOV     DPH,R1
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   FD           MOV     R5,A
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   F583         MOV     DPH,A
   \   000013   8D82         MOV     DPL,R5
   \   000015   E0           MOVX    A,@DPTR
   \   000016   22           RET
    397          /*********************************************************************
    398          for power saving experiment command 
    399          Power Saving Experiment PSEXP:<address><count><interval>
    400          *************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    401          uint8 AT_App_Power_saving_exp(AT_App_Cmd_POWER_SAVING_EXP_t* pBuf){
   \                     AT_App_Power_saving_exp:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    402            //Error check
    403            if(AT_App_Cmd_POWER_SAVING_EXP.count!=0) return AT_isActive_ERROR;
   \   000004   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   000007   6004         JZ      ??AT_App_Power_saving_exp_0
   \   000009   7908         MOV     R1,#0x8
   \   00000B   8055         SJMP    ??AT_App_Power_saving_exp_1
    404            if(pBuf->count==0 || pBuf->interval==0) return AT_PARA_ERROR;  
   \                     ??AT_App_Power_saving_exp_0:
   \   00000D   8A82         MOV     DPL,R2
   \   00000F   8B83         MOV     DPH,R3
   \   000011   A3           INC     DPTR
   \   000012   A3           INC     DPTR
   \   000013   12....       LCALL   ??Subroutine23_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   000016   600D         JZ      ??AT_App_Power_saving_exp_2
   \   000018   8A82         MOV     DPL,R2
   \   00001A   8B83         MOV     DPH,R3
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   12....       LCALL   ??Subroutine23_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   000023   7004         JNZ     ??AT_App_Power_saving_exp_3
   \                     ??AT_App_Power_saving_exp_2:
   \   000025   7924         MOV     R1,#0x24
   \   000027   8039         SJMP    ??AT_App_Power_saving_exp_1
    405            
    406            
    407            AT_App_Cmd_POWER_SAVING_EXP.count= pBuf->count;
   \                     ??AT_App_Power_saving_exp_3:
   \   000029   8A82         MOV     DPL,R2
   \   00002B   8B83         MOV     DPH,R3
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   12....       LCALL   ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   000032   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 2
   \   000035   12....       LCALL   ?Subroutine5 & 0xFFFF
    408            AT_App_Cmd_POWER_SAVING_EXP.nwkAddr= pBuf->nwkAddr;
   \                     ??CrossCallReturnLabel_4:
   \   000038   12....       LCALL   ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   00003B   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP
   \   00003E   12....       LCALL   ?Subroutine5 & 0xFFFF
    409            AT_App_Cmd_POWER_SAVING_EXP.interval= pBuf->interval;
   \                     ??CrossCallReturnLabel_5:
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   12....       LCALL   ??Subroutine22_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   000048   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 4
   \   00004B   E8           MOV     A,R0
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   E9           MOV     A,R1
   \   00004F   F0           MOVX    @DPTR,A
    410            
    411            //start timer to start send task
    412            osal_start_timerEx( AT_App_TaskID, AT_POWER_SAVING_EXP_EVENT, 500 );  
   \   000050                ; Setup parameters for call to function osal_start_timerEx
   \   000050   7CF4         MOV     R4,#-0xc
   \   000052   7D01         MOV     R5,#0x1
   \   000054   7A00         MOV     R2,#0x0
   \   000056   7B10         MOV     R3,#0x10
   \   000058   90....       MOV     DPTR,#AT_App_TaskID
   \   00005B   E0           MOVX    A,@DPTR
   \   00005C   F9           MOV     R1,A
   \   00005D   12....       LCALL   ??osal_start_timerEx?relay
    413            return AT_NO_ERROR;
   \   000060   7900         MOV     R1,#0x0
   \                     ??AT_App_Power_saving_exp_1:
   \   000062                REQUIRE ?Subroutine2
   \   000062                ; // Fall through to label ?Subroutine2
    414          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E8           MOV     A,R0
   \   000001   F0           MOVX    @DPTR,A
   \   000002   A3           INC     DPTR
   \   000003   E9           MOV     A,R1
   \   000004   F0           MOVX    @DPTR,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 2
   \   000003                REQUIRE ??Subroutine23_0
   \   000003                ; // Fall through to label ??Subroutine23_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine23_0:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   000003   E8           MOV     A,R0
   \   000004   49           ORL     A,R1
   \   000005   22           RET
    415          
    416          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    417          static void AT_App_process_Power_Saving_Exp_Evt(){
   \                     AT_App_process_Power_Saving_Exp_Evt:
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    418            AT_AF_hdr buf;
    419            buf.cmd =AT_AT_PSE_EXP_req;
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   7402         MOV     A,#0x2
   \   000012   F0           MOVX    @DPTR,A
    420            if(AT_App_Cmd_POWER_SAVING_EXP.count==0) {
   \   000013   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   000016   7041         JNZ     ??AT_App_process_Power_Saving_Exp_Evt_0
    421              AT_App_Cmd_POWER_SAVING_EXP.interval=0;//not necessay but for robust;
   \   000018   A3           INC     DPTR
   \   000019   E4           CLR     A
   \   00001A   F0           MOVX    @DPTR,A
   \   00001B   A3           INC     DPTR
   \   00001C   F0           MOVX    @DPTR,A
    422              //send end information
    423              buf.info =AT_AF_PSE_info_end;
   \   00001D   04           INC     A
   \   00001E   12....       LCALL   ?XSTACK_DISP0_8
   \   000021   7404         MOV     A,#0x4
   \   000023   12....       LCALL   ?Subroutine3 & 0xFFFF
    424              AT_AF_Cmd_send_simple(AT_App_Cmd_POWER_SAVING_EXP.nwkAddr,AT_AF_POWER_SVING_EXP_CLUSTERID,sizeof(buf), &buf);
   \                     ??CrossCallReturnLabel_0:
   \   000026   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000029   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   00002C   12....       LCALL   ?DEALLOC_XSTACK8
    425              
    426              HalLedSet ( HAL_LED_1, HAL_LED_MODE_OFF );
   \   00002F                ; Setup parameters for call to function HalLedSet
   \   00002F   7A00         MOV     R2,#0x0
   \   000031   7901         MOV     R1,#0x1
   \   000033   12....       LCALL   ??HalLedSet?relay
    427              AT_RESP_START();
   \   000036                ; Setup parameters for call to function AT_HalUARTWrite
   \   000036   7C02         MOV     R4,#0x2
   \   000038   7D00         MOV     R5,#0x0
   \   00003A   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   00003C   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   00003E   7900         MOV     R1,#0x0
   \   000040   12....       LCALL   ??AT_HalUARTWrite?relay
    428              printf("Power Saving Experiment finished");
   \   000043                ; Setup parameters for call to function printf
   \   000043   7A..         MOV     R2,#`?<Constant "Power Saving Experime...">` & 0xff
   \   000045   7B..         MOV     R3,#(`?<Constant "Power Saving Experime...">` >> 8) & 0xff
   \   000047   12....       LCALL   ??printf?relay
    429              AT_RESP_END();
   \   00004A                ; Setup parameters for call to function AT_HalUARTWrite
   \   00004A   7C02         MOV     R4,#0x2
   \   00004C   7D00         MOV     R5,#0x0
   \   00004E   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   000050   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   000052   7900         MOV     R1,#0x0
   \   000054   12....       LCALL   ??AT_HalUARTWrite?relay
    430              return;
   \   000057   803A         SJMP    ??AT_App_process_Power_Saving_Exp_Evt_1
    431            }
    432            HalLedSet ( HAL_LED_1, HAL_LED_MODE_TOGGLE );
   \                     ??AT_App_process_Power_Saving_Exp_Evt_0:
   \   000059                ; Setup parameters for call to function HalLedSet
   \   000059   7A08         MOV     R2,#0x8
   \   00005B   7901         MOV     R1,#0x1
   \   00005D   12....       LCALL   ??HalLedSet?relay
    433            buf.info =AT_AF_PSE_info_ing;
   \   000060   7401         MOV     A,#0x1
   \   000062   12....       LCALL   ?XSTACK_DISP0_8
   \   000065   7403         MOV     A,#0x3
   \   000067   F0           MOVX    @DPTR,A
    434            AT_App_Cmd_POWER_SAVING_EXP.count--;
   \   000068   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 2
   \   00006B   E0           MOVX    A,@DPTR
   \   00006C   24FF         ADD     A,#-0x1
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   E0           MOVX    A,@DPTR
   \   000071   34FF         ADDC    A,#-0x1
   \   000073   12....       LCALL   ?Subroutine3 & 0xFFFF
    435            AT_AF_Cmd_send_simple(AT_App_Cmd_POWER_SAVING_EXP.nwkAddr,AT_AF_POWER_SVING_EXP_CLUSTERID,sizeof(buf), &buf);
   \                     ??CrossCallReturnLabel_1:
   \   000076   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000079   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00007C   12....       LCALL   ?DEALLOC_XSTACK8
    436            osal_start_timerEx( AT_App_TaskID, AT_POWER_SAVING_EXP_EVENT, AT_App_Cmd_POWER_SAVING_EXP.interval );
   \   00007F                ; Setup parameters for call to function osal_start_timerEx
   \   00007F   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 4
   \   000082   E0           MOVX    A,@DPTR
   \   000083   FC           MOV     R4,A
   \   000084   A3           INC     DPTR
   \   000085   E0           MOVX    A,@DPTR
   \   000086   FD           MOV     R5,A
   \   000087   7A00         MOV     R2,#0x0
   \   000089   7B10         MOV     R3,#0x10
   \   00008B   90....       MOV     DPTR,#AT_App_TaskID
   \   00008E   E0           MOVX    A,@DPTR
   \   00008F   F9           MOV     R1,A
   \   000090   12....       LCALL   ??osal_start_timerEx?relay
    437          }
   \                     ??AT_App_process_Power_Saving_Exp_Evt_1:
   \   000093   7402         MOV     A,#0x2
   \   000095   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   7902         MOV     R1,#0x2
   \   000002   7C06         MOV     R4,#0x6
   \   000004   7D00         MOV     R5,#0x0
   \   000006   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP
   \   000009   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   00000C   12....       LCALL   ??AT_AF_Cmd_send_simple_?relay
   \   00000F   7402         MOV     A,#0x2
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function AT_AF_Cmd_send_simple_
   \   000001                ; Setup parameters for call to function AT_AF_Cmd_send_simple_
   \   000001   85..82       MOV     DPL,?XSP + 0
   \   000004   85..83       MOV     DPH,?XSP + 1
   \   000007   8582..       MOV     ?V0 + 0,DPL
   \   00000A   8583..       MOV     ?V0 + 1,DPH
   \   00000D   78..         MOV     R0,#?V0 + 0
   \   00000F   22           RET
    438          /*********************************************************************
    439          for power saving experiment command 
    440          stop experiment
    441          *************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    442          void AT_App_Power_saving_exp_stop(void ){
   \                     AT_App_Power_saving_exp_stop:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    443            AT_App_Cmd_POWER_SAVING_EXP.count=0;
   \   000004   90....       MOV     DPTR,#AT_App_Cmd_POWER_SAVING_EXP + 2
   \   000007   E4           CLR     A
   \   000008   F0           MOVX    @DPTR,A
   \   000009   A3           INC     DPTR
   \   00000A   F0           MOVX    @DPTR,A
    444          }
   \   00000B   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_handleZCL_EP?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_handleZCL_EP

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_handleEntryEvt?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_handleEntryEvt

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_af_remove_ep?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_af_remove_ep

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_af_register_ep?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_af_register_ep

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_af_get_ep?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_af_get_ep

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_af_ep_num?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_af_ep_num

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_af_ep_list?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_af_ep_list

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_Power_saving_exp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_Power_saving_exp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_process_Power_Saving_Exp_Evt?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_process_Power_Saving_Exp_Evt

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??AT_App_Power_saving_exp_stop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AT_App_Power_saving_exp_stop

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {1, 4, 5, 6, 7}>`:
   \   000000   01           DB 1
   \   000001   04           DB 4
   \   000002   05           DB 5
   \   000003   06           DB 6
   \   000004   07           DB 7

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {{32768}, 1, 204, 0}>`:
   \   000000   0080         DW 32768
   \   000002   00000000     DB 0, 0, 0, 0, 0, 0
   \            0000    
   \   000008   01           DB 1
   \   000009   CC           DB 204
   \   00000A   0000         DW 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n">`:
   \   000000   0D0A00       DB "\015\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Power Saving Experime...">`:
   \   000000   506F7765     DB "Power Saving Experiment finished"
   \            72205361
   \            76696E67
   \            20457870
   \            6572696D
   \            656E7420
   \            66696E69
   \            73686564
   \            00      

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     AT_App_HandleKeys                  2      0     43
       -> AF_DataRequest                0      0     62
       -> HalLedBlink                   0      0     44
     AT_App_Init                        0      0      9
       -> AT_ZDO_Register               0      0     18
       -> AT_ONOFF_OUTPUT_Register      0      0     18
       -> AT_AF_Register                0      0     18
       -> zcl_registerForMsg            0      0     18
       -> AT_ZCL_Init                   0      0     18
       -> AT_UartInit                   0      0     18
       -> ZDOInitDevice                 0      0     18
       -> HalKeyConfig                  0      0     18
       -> RegisterForKeys               0      0     18
       -> osal_set_event                0      0     18
     AT_App_Power_saving_exp            2      0      0
       -> osal_start_timerEx            4      0      0
     AT_App_Power_saving_exp_stop       2      0      0
     AT_App_ProcessEvent                0      0     12
       -> osal_msg_receive              0      0     24
       -> AT_App_HandleKeys             0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> AT_ONOFF_OUTPUT_MessageMSGCB
                                        0      0     24
       -> AT_AF_MessageMSGCB            0      0     24
       -> AT_ZCL_ProcessIncomingMsg     0      0     24
       -> AT_ZDO_ProcessMsgCBs          0      0     24
       -> AT_handleZCL_EP               0      0     24
       -> AT_handleEntryEvt             0      0     24
       -> AT_App_process_Power_Saving_Exp_Evt
                                        0      0     24
     AT_App_process_Power_Saving_Exp_Evt
                                        0      0     26
       -> AT_AF_Cmd_send_simple_        0      0     28
       -> HalLedSet                     0      0     24
       -> AT_HalUARTWrite               0      0     24
       -> printf                        0      0     24
       -> AT_HalUARTWrite               0      0     24
       -> HalLedSet                     0      0     24
       -> AT_AF_Cmd_send_simple_        0      0     28
       -> osal_start_timerEx            0      0     24
     AT_af_ep_list                      1      0     10
     AT_af_ep_num                       2      0      0
     AT_af_get_ep                       2      0      0
     AT_af_register_ep                  0      0      9
     AT_af_remove_ep                    0      0     25
     AT_handleEntryEvt                  0      0     27
       -> osal_nv_read                  0      0     30
       -> osal_nv_write                 0      0     30
     AT_handleZCL_EP                    2      0     28
       -> AT_NV_ZCL_readEPStatus        0      0     32
       -> AT_ZCL_EP_ENABLE              0      0     32
       -> AT_af_remove_ep               0      0     32
       -> AT_ZCL_EP_ENABLE              0      0     32


   Segment part sizes:

     Function/Label                              Bytes
     --------------                              -----
     _A_IEN0                                        1
     WDCTL                                          1
     AT_App_TaskID                                  1
     removedEPList                                  2
     AT_App_Cmd_POWER_SAVING_EXP                    6
     AT_App_Init                                   75
     ?Subroutine0                                   5
     AT_App_ProcessEvent                          212
     AT_handleZCL_EP                              104
     ?Subroutine17                                 14
     ?Subroutine1                                   3
     ??Subroutine21_0                               5
     AT_handleEntryEvt                            104
     ?Subroutine4                                  10
     AT_App_HandleKeys                            116
     AT_af_remove_ep                               82
     ?Subroutine16                                  8
     ??Subroutine22_0                               4
     ?Subroutine20                                  6
     ?Subroutine15                                  8
     ?Subroutine14                                  4
     ?Subroutine19                                  6
     ?Subroutine13                                 17
     ?Subroutine9                                  14
     ?Subroutine8                                  13
     AT_af_register_ep                             82
     AT_af_get_ep                                  55
     ?Subroutine12                                 17
     ?Subroutine2                                   7
     AT_af_ep_num                                  45
     ?Subroutine10                                  8
     AT_af_ep_list                                 58
     ?Subroutine18                                 13
     ?Subroutine6                                  23
     AT_App_Power_saving_exp                       98
     ?Subroutine5                                  10
     ?Subroutine7                                   3
     ??Subroutine23_0                               6
     AT_App_process_Power_Saving_Exp_Evt
                                                  152
     ?Subroutine11                                 18
     ?Subroutine3                                  16
     AT_App_Power_saving_exp_stop                  14
     ??AT_App_Init?relay                            6
     ??AT_App_ProcessEvent?relay                    6
     ??AT_handleZCL_EP?relay                        6
     ??AT_handleEntryEvt?relay                      6
     ??AT_App_HandleKeys?relay                      6
     ??AT_af_remove_ep?relay                        6
     ??AT_af_register_ep?relay                      6
     ??AT_af_get_ep?relay                           6
     ??AT_af_ep_num?relay                           6
     ??AT_af_ep_list?relay                          6
     ??AT_App_Power_saving_exp?relay                6
     ??AT_App_process_Power_Saving_Exp_Evt?relay    6
     ??AT_App_Power_saving_exp_stop?relay           6
     ?<Constant {1, 4, 5, 6, 7}>                    5
     ?<Constant {{32768}, 1, 204, 0}>              12
     ?<Constant "\r\n">                             3
     ?<Constant "Power Saving Experime...">        33

 
 1 435 bytes in segment BANKED_CODE
    78 bytes in segment BANK_RELAYS
     2 bytes in segment SFR_AN
    53 bytes in segment XDATA_ROM_C
     9 bytes in segment XDATA_Z
 
 1 513 bytes of CODE  memory
    53 bytes of CONST memory
     0 bytes of DATA  memory (+ 2 bytes shared)
     9 bytes of XDATA memory

Errors: none
Warnings: none
